[
  {
    "name": "ONGOING - GLOBAL",
    "contexts": [
      "The ONGOING - GLOBAL event attribute will",
      "affect all entities in the game environment."
    ],
    "definitions": []
  },
  {
    "name": "ONGOING - EACH PLAYER",
    "contexts": [
      "The ONGOING - EACH PLAYER event attribute",
      "will affect the specified players in the",
      "game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "PLAYER EARNED ELIMINATION",
    "contexts": [
      "The PLAYER EARNED ELIMINATION event attribute",
      "will affect the specified players who successfully",
      "score an elimination in the game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "PLAYER DEALT FINAL BLOW",
    "contexts": [
      "The PLAYER DEALT FINAL BLOW event attribute",
      "will affect the specified players who successfully",
      "dealt the lethal damage against another",
      "player in the game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "PLAYER DEALT DAMAGE",
    "contexts": [
      "The PLAYER DEALT DAMAGE event attribute",
      "will affect the specified players who successfully",
      "dealt damage against another player in the",
      "game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "PLAYER TOOK DAMAGE",
    "contexts": [
      "The PLAYER TOOK DAMAGE event attribute will",
      "affect the specified players who received",
      "damage in the game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "PLAYER DIED",
    "contexts": [
      "The PLAYER DIED event attribute will affect",
      "the specified players who died in the game environment."
    ],
    "definitions": [
      [
        "ALL - This event will affect both teams.",
        "TEAM 1 - This event will affect team 1 (blue/defense)",
        "TEAM 2 - This event will affect team 2 (red/attack)"
      ],
      [
        "ALL - This event will affect all players",
        "regardless of team, slot position, or hero",
        "selected.",
        "SLOT # (0-11) -  This event affect the slot",
        "assignment of that specific player in the",
        "order of the Lobby (see diagram below)",
        "{HERO NAME} - This event affects any players",
        "using the specified hero."
      ]
    ]
  },
  {
    "name": "ABORT",
    "contexts": [
      "Stops execution of the action list."
    ],
    "definitions": []
  },
  {
    "name": "ABORT IF",
    "contexts": [
      "Stops execution of the action list if the",
      "action’s condition evaluates to true, if",
      "it does not, the execution continues with",
      "the next action."
    ],
    "definitions": [
      [
        "Condition - Specifies whether the execution",
        "is stopped. Can use most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "ABORT IF CONDITION IS FALSE",
    "contexts": [
      "Stops execution of the action list if at",
      "least one condition in the condition list",
      "is false. If all conditions are true, execution",
      "continues with the next action."
    ],
    "definitions": []
  },
  {
    "name": "ABORT IF CONDITION IS TRUE",
    "contexts": [
      "Stops execution of the action list if all",
      "conditions in the condition list is true.",
      "If any are false, execution continues with",
      "the next action."
    ],
    "definitions": []
  },
  {
    "name": "ALLOW BUTTON",
    "contexts": [
      "Undoes the effect of the disallow button",
      "action for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose button",
        "is being reenabled. Can use most Player",
        "based Value Syntax."
      ],
      [
        "Button - The logical button that is being reenabled."
      ]
    ]
  },
  {
    "name": "APPLY IMPLUSE",
    "contexts": [
      "Applies an instantaneous change in velocity",
      "to the movement of one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose velocity",
        "will be changed. Can use most Player based Value Syntax."
      ],
      [
        "Direction - The unit direction in which",
        "the impulse will be applied. This value",
        "is normalized internally. Can use most Vector",
        "based Value Syntax."
      ],
      [
        "Speed - The magnitude of the change to the",
        "velocities of the player or players. Can",
        "use most Number based Value Syntax."
      ],
      [
        "Relative - Specifies whether the direction",
        "is relative to world coordinates or the",
        "local coordinates of the player or players."
      ],
      [
        "To World - Relative to the world’s coordinate system."
      ],
      [
        "To Player - Relative to the player’s local",
        "coordinate system (which moves and rotates",
        "with the player)."
      ],
      [
        "Motion - Specifies whether existing velocity",
        "that is counter to direction should first",
        "be canceled out before applying the impulse."
      ],
      [
        "Cancel Contrary Motion - If the target is",
        "moving against the direction of the impulse,",
        "this relative velocity is negated before",
        "the impulse is applied."
      ],
      [
        "Incorporate Contrary Motion - The impulse",
        "is added directly to the velocity of the",
        "target, so if the target is moving against",
        "the direction of the impulse, it might seem",
        "like the impulse has less of an effect."
      ]
    ]
  },
  {
    "name": "BIG MESSAGE",
    "contexts": [
      "Displays a large message above the reticle",
      "that is visible to specific players."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "see the message. Can use most Value Syntax",
        "to select multiple players to specify."
      ],
      [
        "Header - The message to be displayed. Can",
        "use most String based Value Syntax to specify."
      ]
    ]
  },
  {
    "name": "CHASE GLOBAL VARIABLE AT RATE",
    "contexts": [
      "Gradually modifies the value of a global",
      "variable at a specific rate. (A global variable",
      "is a variable that belongs to the game itself.)"
    ],
    "definitions": [
      [
        "Variable - The variable the action will",
        "manipulate. Can use most Variable based Value Syntax."
      ],
      [
        "Destination - The value that the global",
        "variable will eventually reach. The type",
        "of this value may be either a number or",
        "a vector, through the variable’s existing",
        "value must be of the same type before the",
        "chase begins. Can use most Number or Vector",
        "based Value Syntax to specify."
      ],
      [
        "Rate - The amount of change that will happen",
        "to the variable’s value each second. Can",
        "use most Number based Value Syntax to specify."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can specify a Destination and Rate or nothing."
      ]
    ]
  },
  {
    "name": "CHASE GLOBAL VARIABLE OVER TIME",
    "contexts": [
      "Gradually modifies the value of a global",
      "variable over time. (A global variable is",
      "a variable that belongs to the game itself.)"
    ],
    "definitions": [
      [
        "Variable - The variable the action will",
        "manipulate. Can use most Variable based Value Syntax."
      ],
      [
        "Destination - The value that the global",
        "variable will eventually reach. The type",
        "of this value may be either a number or",
        "a vector, through the variable’s existing",
        "value must be of the same type before the",
        "chase begins. Can use most Number or Vector",
        "based Value Syntax to specify."
      ],
      [
        "Duration - The amount of time, in seconds,",
        "over which the variable’s value will approach",
        "the destination. Can use most Number based",
        "Value Syntax to specify."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can specify a Destination and Duration or nothing."
      ]
    ]
  },
  {
    "name": "CHASE PLAYER VARIABLE AT RATE",
    "contexts": [
      "Gradually modifies the value of a player",
      "variable at a specific rate. (A player variable",
      "is a variable that belongs to a specific player.)"
    ],
    "definitions": [
      [
        "Player - The player whose variable will",
        "gradually change. If multiple players are",
        "provided, each of their variables will change independently."
      ],
      [
        "Variable - The variable the action will",
        "manipulate. Can use most Variable based Value Syntax."
      ],
      [
        "Destination - The value that the player",
        "variable will eventually reach. The type",
        "of this value may be either a number or",
        "a vector, through the variable’s existing",
        "value must be of the same type before the",
        "chase begins. Can use most Number or Vector",
        "based Value Syntax to specify."
      ],
      [
        "Rate - The amount of change that will happen",
        "to the variable’s value each second. Can",
        "use most Number based Value Syntax to specify."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can specify a Destination and Rate or nothing."
      ]
    ]
  },
  {
    "name": "CHASE PLAYER VARIABLE OVER TIME",
    "contexts": [
      "Gradually modifies the value of a player",
      "variable over time. (A player variable is",
      "a variable that belongs to a specific player.)"
    ],
    "definitions": [
      [
        "Player - The player whose variable will",
        "gradually change. If multiple players are",
        "provided, each of their variables will change independently."
      ],
      [
        "Variable - The variable the action will",
        "manipulate. Can use most Variable based Value Syntax."
      ],
      [
        "Destination - The value that the player",
        "variable will eventually reach. The type",
        "of this value may be either a number or",
        "a vector, through the variable’s existing",
        "value must be of the same type before the",
        "chase begins. Can use most Number or Vector",
        "based Value Syntax to specify."
      ],
      [
        "Duration - The amount of time, in seconds,",
        "over which the variable’s value will approach",
        "the destination. Can use most Number based",
        "Value Syntax to specify."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can specify a Destination and Duration or nothing."
      ]
    ]
  },
  {
    "name": "CLEAR STATUS",
    "contexts": [
      "Clears a status that was applied from a",
      "set status action from one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players from whom",
        "the status will be removed. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Status - The Status to be removed from the",
        "player or players. Values include Hacked,",
        "Burning, Knocked Down, Asleep, Frozen, Unkillable,",
        "Invincible, Phased Out, Rooted, or Stunned."
      ]
    ]
  },
  {
    "name": "COMMUNICATE",
    "contexts": [
      "Causes one or more players to use an emote,",
      "voice line, or other equipped communication."
    ],
    "definitions": [
      [
        "Player - The player or players to perform",
        "the communication. Can use most Player based Value Syntax."
      ],
      [
        "Type - The type of communication. Can use",
        "any equipped emote, equipped voice line,",
        "or any other communication effect."
      ]
    ]
  },
  {
    "name": "CREATE EFFECT",
    "contexts": [
      "Creates an in-world effect entity. This",
      "effect entity will persist until destroyed,",
      "to obtain a reference to this entity, use",
      "the last created entity value. This action",
      "will fail if too many entities have been created."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "be able to see the effect. Can use most",
        "Value Syntax to select one or multiple players."
      ],
      [
        "Type - The type of the effect to be created.",
        "(Sphere, Light Shaft, Orb, Ring, Cloud,",
        "Sparkles, Good Aura, Bad Aura, Energy Sound,",
        "Pick-Up Sound, Good Aura Sound, Bad Aura",
        "Sound, Sparkles Sound, Smoke Sound, Decal",
        "Sound, Beacon Sound)"
      ],
      [
        "Color - The color of the effect to be created.",
        "IF a particular team is chosen, the effect",
        "will either be red or blue, depending on",
        "whether the team is hostile to the viewer.",
        "Does not apply to sound effects. (Sphere,",
        "Light Shaft, Orb, Ring, Cloud, Sparkles,",
        "Good Aura, Bad Aura, Energy Sound, Pick-Up",
        "Sound, Good Aura Sound, Bad Aura Sound,",
        "Sparkles Sound, Smoke Sound, Decal Sound, Beacon Sound)"
      ],
      [
        "Position - The effect’s position. If this",
        "value is a player, then the effect will",
        "move along with the player, otherwise, the",
        "value is interpreted as a position in the",
        "world. Can use most Player or Vector based",
        "Value Syntax. (Sphere, Light Shaft, Orb,",
        "Ring, Cloud, Sparkles, Good Aura, Bad Aura,",
        "Energy Sound, Pick-Up Sound, Good Aura Sound,",
        "Bad Aura Sound, Sparkles Sound, Smoke Sound,",
        "Decal Sound, Beacon Sound)"
      ],
      [
        "Radius - The effect’s radius in meters.",
        "Sound effects have their volume affected",
        "instead. (Sphere, Light Shaft, Orb, Ring,",
        "Cloud, Sparkles, Good Aura, Bad Aura, Energy",
        "Sound, Pick-Up Sound, Good Aura Sound, Bad",
        "Aura Sound, Sparkles Sound, Smoke Sound,",
        "Decal Sound, Beacon Sound)"
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated,",
        "the effect will keep asking for and using",
        "new values from reevaluated inputs."
      ]
    ]
  },
  {
    "name": "CREATE HUD TEXT",
    "contexts": [
      "Creates HUD text visible to specific players",
      "at specific location on the screen. This",
      "text will persist until destroyed. To obtain",
      "a reference to this text, use the last text",
      "ID value. This action will fail if too many",
      "text elements have been created."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "see the HUD text. Can use most Value Syntax",
        "to select one or multiple players."
      ],
      [
        "Header - The header text to be displayed",
        "(can be blank). Can use most String based",
        "Value Syntax to populate."
      ],
      [
        "Subheader - The subheader text to be displayed",
        "(can be blank). Can use most String based",
        "Value Syntax to populate."
      ],
      [
        "Text - The body text to be displayed (can",
        "be blank). Can use most String based Value",
        "Syntax to populate."
      ],
      [
        "Location - The location on the screen where",
        "text will appear. You can choose left, top, or right."
      ],
      [
        "Sort Order - The Sort Order of the text",
        "relative to other text in the same location.",
        "Text with a higher sort order will come",
        "after text with a lower sort order. Can",
        "use most Number based Value Syntax."
      ],
      [
        "Header Color - The color of the Header text",
        "to be created. If a particular team is chosen,",
        "the effect will either be red or blue."
      ],
      [
        "Subheader Color - The color of the Subheader",
        "text to be created. If a particular team",
        "is chosen, the effect will either be red or blue."
      ],
      [
        "Text Color - The color of the body text",
        "to be created. If a particular team is chosen,",
        "the effect will either be red or blue."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated,",
        "the text will keep asking for and using",
        "new values from reevaluated inputs."
      ]
    ]
  },
  {
    "name": "CREATE ICON",
    "contexts": [
      "Creates an in-world entity. This icon entity",
      "will persist until destroyed. To obtain",
      "a reference to this entity, use the last",
      "created entity value. This action will fail",
      "if too many entities have been created."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "be able to see the icon. Can use most Value",
        "Syntax to select one or multiple players."
      ],
      [
        "Position - The icon’s position. If this",
        "value is a player, then the icon will appear",
        "above the player’s head, otherwise, the",
        "value is interpreted as a position in the",
        "world. Can use most Player or Vector based Value Syntax."
      ],
      [
        "Icon - The icon to be created. (Arrow: Down,",
        "Arrow: Left, Arrow: Right, Arrow: Up, Asterisk,",
        "Bolt, Checkmark, Circle, Club, Diamond,",
        "Dizzy, Exclamation Mark, Eye, Fire, Flag,",
        "Halo, Happy, Heart, Moon, No, Plus, Poison,",
        "Poison 2, Question Mark, Radioactive, Recycle,",
        "Ring Thick, Ring Thin, Sad, Skull, Spade,",
        "Spiral, Stop, Trashcan, Warning, X)"
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continously reevaluated,",
        "the icon will keep asking for and using",
        "new values from reevaluated inputs. (Arrow:",
        "Down, Arrow: Left, Arrow: Right, Arrow:",
        "Up, Asterisk, Bolt, Checkmark, Circle, Club,",
        "Diamond, Dizzy, Exclamation Mark, Eye, Fire,",
        "Flag, Halo, Happy, Heart, Moon, No, Plus,",
        "Poison, Poison 2, Question Mark, Radioactive,",
        "Recycle, Ring Thick, Ring Thin, Sad, Skull,",
        "Spade, Spiral, Stop, Trashcan, Warning,",
        "X, Visible to and position, Position, Visible to, None)"
      ],
      [
        "Icon Color - The color of the icon to be",
        "created. IF a particular team is chosen,",
        "the icon will either be red or blue, depending",
        "on whether the team is hostile to the viewer.",
        "(Arrow: Down, Arrow: Left, Arrow: Right,",
        "Arrow: Up, Asterisk, Bolt, Checkmark, Circle,",
        "Club, Diamond, Dizzy, Exclamation Mark,",
        "Eye, Fire, Flag, Halo, Happy, Heart, Moon,",
        "No, Plus, Poison, Poison 2, Question Mark,",
        "Radioactive, Recycle, Ring Thick, Ring Thin,",
        "Sad, Skull, Spade, Spiral, Stop, Trashcan,",
        "Warning, X, Visible to and position, Position,",
        "Visible to, None)"
      ],
      [
        "Show when offscreen - Should this icon still",
        "appear even when it is behind you? Can use",
        "most Boolean based Value Syntax to specify."
      ]
    ]
  },
  {
    "name": "CREATE IN-WORLD TEXT",
    "contexts": [
      "Creates in-world text visible to specific",
      "players at specific position in the world.",
      "This text will persist until destroyed.",
      "To obtain a reference to this text, use",
      "the last text ID value. This action will",
      "fail if too many text elements have been created."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "see the HUD text. Can use most Value Syntax",
        "to select one or multiple players."
      ],
      [
        "Header - The header text to be displayed",
        "(can be blank). Can use most String based",
        "Value Syntax to populate."
      ],
      [
        "Position - The text’s position. If this",
        "value is a player, then the text will appear",
        "above the player’s head. Otherwise, the",
        "value is interpreted as a position in the",
        "world. Can use most Player or Vector based Value Syntax."
      ],
      [
        "Scale - The text’s scale. Can use most Number",
        "based Value Syntax."
      ],
      [
        "Clipping - Specifies whether the text can",
        "be seen through walls or is instead clipped."
      ],
      [
        "Clip Against Surfaces - The text may be",
        "partially or completely obscured by walls,",
        "floors, ceilings, players, or other solid objects."
      ],
      [
        "Do not clip - The text will always be fully",
        "visible. Even if it is behind a wall or solid object."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continuously reevaluated,",
        "the text will keep asking for and using",
        "new values from reevaluated inputs."
      ]
    ]
  },
  {
    "name": "DAMAGE",
    "contexts": [
      "Applies instantaneous damage to one or more",
      "players, possibly killing the players."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "receive damage. Can use most Player based",
        "Value Syntax to select one or multiple players."
      ],
      [
        "Damager - The player who will receive credit",
        "for the damage. A damager of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Amount - The amount of damage to apply.",
        "This amount may be modified by buffs, debuffs,",
        "or armor. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "DECLARE MATCH DRAW",
    "contexts": [
      "Instantly ends the match in a draw. This",
      "action has no effect in free-for-all modes."
    ],
    "definitions": []
  },
  {
    "name": "DECLARE PLAYER VICTORY",
    "contexts": [
      "Instantly ends the match with the specific",
      "player as the winner. This action only has",
      "an effect in free-for-all modes."
    ],
    "definitions": [
      [
        "Player - The winning player. Can use most",
        "Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "DECLARE ROUND VICTORY",
    "contexts": [
      "Declare a team as the current round winner.",
      "This only works in the control and elimination game modes."
    ],
    "definitions": [
      [
        "Team - Round winning team. Can use most",
        "Team based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "DECLARE TEAM VICTORY",
    "contexts": [
      "Instantly ends the match with the specified",
      "team as the winner. This action has no effect",
      "in free-for-all modes."
    ],
    "definitions": [
      [
        "Team - The winning team. Can use most Team",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "DESTROY ALL EFFECTS",
    "contexts": [
      "Destroys all effect entities created by create effect."
    ],
    "definitions": []
  },
  {
    "name": "DESTROY ALL ICONS",
    "contexts": [
      "Destroys all icon entities created by create icon."
    ],
    "definitions": []
  },
  {
    "name": "DESTROY ALL IN-WORLD TEXT",
    "contexts": [
      "Destroys all in-world text created by the",
      "create in-world effect."
    ],
    "definitions": []
  },
  {
    "name": "DESTROY EFFECT",
    "contexts": [
      "Destroys an effect entity that was created",
      "by create effect."
    ],
    "definitions": [
      [
        "Entity - Specifies which effect entity to",
        "destroy. This entity may be the last created",
        "entity or a variable into which last created",
        "entity was earlier stored."
      ]
    ]
  },
  {
    "name": "DESTROY HUD TEXT",
    "contexts": [
      "Destroys hud text that was created by create hud text."
    ],
    "definitions": [
      [
        "Text ID - Specifies which hud text to destroy.",
        "This ID may be last text ID or a variable",
        "into which last text ID was earlier stored."
      ]
    ]
  },
  {
    "name": "DESTROY ICON",
    "contexts": [
      "Destroys an icon entity that was created by create icon."
    ],
    "definitions": [
      [
        "Text ID - Specifies which icon to destroy.",
        "This ID may be last text ID or a variable",
        "into which last create entity was earlier stored."
      ]
    ]
  },
  {
    "name": "DISABLE BUILT-IN GAME MODE ANNOUNCER",
    "contexts": [
      "Disables game mode announcements from the",
      "announcer until reenabled or the match ends."
    ],
    "definitions": []
  },
  {
    "name": "DISABLE BUILT-IN GAME MODE COMPLETION",
    "contexts": [
      "Disables completion of the match from the",
      "game mode itself, only allowing the match",
      "to be completed by scripting commands."
    ],
    "definitions": []
  },
  {
    "name": "DISABLE BUILT-IN GAME MODE MUSIC",
    "contexts": [
      "Disables all game-mode music until reenabled",
      "or the match ends."
    ],
    "definitions": []
  },
  {
    "name": "DISABLE BUILT-IN GAME MODE RESPAWNING",
    "contexts": [
      "Disables automatic respawning for one or",
      "more players, only allowing respawning by",
      "scripting commands."
    ],
    "definitions": [
      [
        "Player - The player or players whose respawning",
        "is affected. Can use most Player based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "DISABLE BUILT-IN GAME MODE SCORING",
    "contexts": [
      "Disables changes to player and team scores",
      "from the game mode itself, only allowing",
      "scores to be changed by scripting commands."
    ],
    "definitions": []
  },
  {
    "name": "DISABLE DEATH SPECTATE ALL PLAYERS",
    "contexts": [
      "Undoes the effect of the enable death spectate",
      "all players action for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose default",
        "death spectate behavior is restored. Can",
        "use most Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "DISABLE DEATH SPECTATE TARGET HUD",
    "contexts": [
      "Undoes the effect of the enable death spectate",
      "target hud action for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "revert to seeing their own HUD while death",
        "spectating. Can use most Player based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "DISALLOW BUTTON",
    "contexts": [
      "Disables a logical button for one or more",
      "players such that pressing it has no effect."
    ],
    "definitions": [
      [
        "Player - The player executing this rule,",
        "as specified by the event. May be the same",
        "as the attacker or victim. Can use most",
        "Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "ENABLE BUILT-IN GAME MODE ANNOUNCER",
    "contexts": [
      "Undoes the effect of the disable built-in",
      "game mode announcer action."
    ],
    "definitions": []
  },
  {
    "name": "ENABLE BUILT-IN GAME MODE COMPLETION",
    "contexts": [
      "Undoes the effect of the disable built-in",
      "game mode completion action."
    ],
    "definitions": []
  },
  {
    "name": "ENABLE BUILT-IN GAME MODE MUSIC",
    "contexts": [
      "Undoes the effect of the disable built-in",
      "game mode music action."
    ],
    "definitions": []
  },
  {
    "name": "ENABLE BUILT-IN GAME MODE RESPAWNING",
    "contexts": [
      "Undoes the effect of the disable built-in",
      "game mode respawning for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose respawning",
        "is affected. Can use most Player based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "ENABLE BUILT-IN GAME MODE SCORING",
    "contexts": [
      "Undoes the effect of the disable built-in",
      "game mode scoring action."
    ],
    "definitions": []
  },
  {
    "name": "ENABLE DEATH SPECTATE ALL PLAYERS",
    "contexts": [
      "Allows one or more players to spectate all",
      "players when dead, as opposed to only allies."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "be allowed to spectate all players. Can",
        "use most Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "ENABLE DEATH SPECTATE TARGET HUD",
    "contexts": [
      "Allows one or more players to see their",
      "target’s HUD when dead instead of their",
      "own while death spectating."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "begin seeing their spectate’s target’s hud",
        "while death spectating. Can use most Player",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "GO TO ASSEMBLE HEROES",
    "contexts": [
      "Go to the assemble heroes phase of the game",
      "mode. Only works if a game is in progress."
    ],
    "definitions": []
  },
  {
    "name": "HEAL",
    "contexts": [
      "Provides an instantaneous heal to one or",
      "more players. This heal will not resurrect dead players."
    ],
    "definitions": [
      [
        "Player - The player or players whose health",
        "will be restored. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Healer - The player who will receive credit",
        "for the healing. A healer of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Amount - The amount of healing to apply.",
        "This amount may be modified by buffs or",
        "debuffs, healing is capped by each player’s",
        "max health. Can use most Number based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "KILL",
    "contexts": [
      "Instantly kills one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "be killed. Can use most Player based Value",
        "Syntax for this value."
      ],
      [
        "Killer - The player who will receive credit",
        "for the kill. A killer of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "LOOP",
    "contexts": [
      "Restarts the action list from the beginning.",
      "To prevent an infinite loop, a wait action",
      "must execute between the start of the action",
      "list and this action."
    ],
    "definitions": []
  },
  {
    "name": "LOOP IF",
    "contexts": [
      "Restarts the action list from the beginning",
      "if this action’s condition evaluates to",
      "true. If it does not, execution continues",
      "with the next action. To prevent an infinite",
      "loop, a wait action must execute between",
      "the start of the action list and this action."
    ],
    "definitions": [
      [
        "Condition - Specifies whether the loop will",
        "occur. Can use most Conditional based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "LOOP IF CONDITION IF FALSE",
    "contexts": [
      "Restarts the action list from the beginning",
      "if at least one condition in the condition",
      "list is false. If all conditions are true,",
      "execution continues with the next action.",
      "To prevent an infinite loop, a wait action",
      "must execute between the start of the action",
      "list and this action."
    ],
    "definitions": []
  },
  {
    "name": "LOOP IF CONDITION IF TRUE",
    "contexts": [
      "Restarts the action list from the beginning",
      "if all conditions in the condition list",
      "is true. If any are false, execution continues",
      "with the next action. To prevent an infinite",
      "loop, a wait action must execute between",
      "the start of the action list and this action."
    ],
    "definitions": []
  },
  {
    "name": "MODIFY GLOBAL VARIABLE",
    "contexts": [
      "Modifies the value of a global variable,",
      "which is a variable that belongs to the game itself."
    ],
    "definitions": [
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ],
      [
        "Operation - The way in which the variable’s",
        "value will be changed. Options include standard",
        "arithmetic operations as well as array operations",
        "for appending and removing values."
      ],
      [
        "Value - The value used for the modification.",
        "For arithmetic operations, this is the second",
        "of two operands, with the other being the",
        "variable’s existing value. For array operations,",
        "this is the value to append or remove. Various",
        "Value Syntax can be used."
      ]
    ]
  },
  {
    "name": "MODIFY GLOBAL VARIABLE AT INDEX",
    "contexts": [
      "Modifies the value of a global variable",
      "at an index, which is a variable that belongs",
      "to the game itself."
    ],
    "definitions": [
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ],
      [
        "Index - The index of the array to modify.",
        "If the index is beyond the end of the array,",
        "the array is extended with new elements",
        "given a value of 0."
      ],
      [
        "Operation - The way in which the variable’s",
        "value will be changed. Options include standard",
        "arithmetic operations as well as array operations",
        "for appending and removing values."
      ],
      [
        "Value - The value used for the modification.",
        "For arithmetic operations, this is the second",
        "of two operands, with the other being the",
        "variable’s existing value. For array operations,",
        "this is the value to append or remove. Various",
        "Value Syntax can be used."
      ]
    ]
  },
  {
    "name": "MODIFY PLAYER SCORE",
    "contexts": [
      "Modifies the score (kill count) of one or",
      "more players. This action only has an effect",
      "in free-for-all modes."
    ],
    "definitions": [
      [
        "Player - The player whose score will change.",
        "Can use most Player based Value Syntax for this value."
      ],
      [
        "Score - The amount the score will increase",
        "or decrease. If positive, the score will",
        "increase. If negative, the score will decrease.",
        "Can use most Number based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "MODIFY PLAYER VARIABLE",
    "contexts": [
      "Modifies the value of a player variable,",
      "which is a variable that belongs to a specific player."
    ],
    "definitions": [
      [
        "Player - The player whose variable will",
        "be modified. If multiple players are provided,",
        "each of their variables will be set. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ],
      [
        "Operation - The way in which the variable’s",
        "value will be changed. Options include standard",
        "arithmetic operations as well as array operations",
        "for appending and removing values."
      ],
      [
        "Value - The value used for the modification.",
        "For arithmetic operations, this is the second",
        "of two operands, with the other being the",
        "variable’s existing value. For array operations,",
        "this is the value to append or remove. Various",
        "Value Syntax can be used."
      ]
    ]
  },
  {
    "name": "MODIFY PLAYER VARIABLE AT INDEX",
    "contexts": [
      "Modifies the value of a player variable",
      "at an index, which is a variable that belongs",
      "to a specific player."
    ],
    "definitions": [
      [
        "Player - The player whose variable will",
        "be modified. If multiple players are provided,",
        "each of their variables will be set. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ],
      [
        "Index - The index of the array to modify.",
        "If the index is beyond the end of the array,",
        "the array is extended with new elements",
        "given a value of 0."
      ],
      [
        "Operation - The way in which the variable’s",
        "value will be changed. Options include standard",
        "arithmetic operations as well as array operations",
        "for appending and removing values."
      ],
      [
        "Value - The value used for the modification.",
        "For arithmetic operations, this is the second",
        "of two operands, with the other being the",
        "variable’s existing value. For array operations,",
        "this is the value to append or remove. Various",
        "Value Syntax can be used."
      ]
    ]
  },
  {
    "name": "MODIFY TEAM SCORE",
    "contexts": [
      "Modifies the score of one or both teams.",
      "This action has not effect in free-for-all",
      "modes or modes without a team score."
    ],
    "definitions": [
      [
        "Team - The team whose score will be changed.",
        "Can use most Player based Value Syntax for this value."
      ],
      [
        "Score - The amount the score will increase",
        "or decrease. If positive, the score will",
        "increase. If negative, the score will decrease.",
        "Can use most Number based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "PAUSE MATCH TIME",
    "contexts": [
      "Pauses the match time, players, objective",
      "logic, and game mode advancement criteria",
      "are unaffected by the pause."
    ],
    "definitions": []
  },
  {
    "name": "PLAY EFFECT",
    "contexts": [
      "Plays an effect at a position in the world.",
      "The lifetime of this effect is short, so",
      "it does not need to be updated or destroyed."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "be able to see the effect. Can use most",
        "Value Syntax to select one or multiple players."
      ],
      [
        "Type - The type of the effect to be created.",
        "(Good Explosion, Bad Explosion, Ring Explosion,",
        "Good Pickup Effect, Bad Pickup Effect, Debuff",
        "Impact Sound, Buff Impact Sound, Ring Explosion",
        "Sound, Buff Explosion Sound, Explosion Sound)"
      ],
      [
        "Color - The color of the effect to be created.",
        "IF a particular team is chosen, the effect",
        "will either be red or blue, depending on",
        "whether the team is hostile to the viewer.",
        "(Good Explosion, Bad Explosion, Ring Explosion,",
        "Good Pickup Effect, Bad Pickup Effect, Debuff",
        "Impact Sound, Buff Impact Sound, Ring Explosion",
        "Sound, Buff Explosion Sound, Explosion Sound)"
      ],
      [
        "Position - The effect’s position. If this",
        "value is a player, then the effect will",
        "move along with the player, otherwise, the",
        "value is interpreted as a position in the",
        "world. Can use most Player or Vector based",
        "Value Syntax. (Good Explosion, Bad Explosion,",
        "Ring Explosion, Good Pickup Effect, Bad",
        "Pickup Effect, Debuff Impact Sound, Buff",
        "Impact Sound, Ring Explosion Sound, Buff",
        "Explosion Sound, Explosion Sound)"
      ],
      [
        "Radius - The effect’s radius in meters.",
        "Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "PRELOAD HERO",
    "contexts": [
      "Preemptively loads the specified hero or",
      "heroes into memory using the skins of the",
      "specified player or players, available memory",
      "permitting. Useful whenever rapid hero changing",
      "is possible and the next hero is known."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "begin preloading a hero or heroes. Only",
        "one preload hero action will be active at",
        "a time for a given player. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Hero - The hero or heroes to begin preloading",
        "for the specified player or players. When",
        "multiple heroes are specified in an array,",
        "the Heroes towards the beginning of the",
        "array are prioritized. Can use most Hero",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "PRESS BUTTON",
    "contexts": [
      "Forces one or more players to press a button",
      "virtually for a single frame."
    ],
    "definitions": [
      [
        "Player - The player or players for whom",
        "virtual button input will be forced. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Button - The button to be pressed."
      ]
    ]
  },
  {
    "name": "RESET PLAYER HERO AVAILABILITY",
    "contexts": [
      "Restores the list of heroes available to",
      "one or more players to the list specified",
      "by the game settings. If a player’s current",
      "hero becomes unavailable, the player is",
      "forced to choose a different hero and respawn",
      "at an appropriate spawn location."
    ],
    "definitions": [
      [
        "Player - The player or players whose hero",
        "list is being reset. Can use most Player",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "RESPAWN",
    "contexts": [
      "Respawns one or more players at an appropriate",
      "spawn location with full health, even if",
      "they were already alive."
    ],
    "definitions": [
      [
        "Player - The player or players to respawn.",
        "Can use most Player based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "RESURRECT",
    "contexts": [
      "Instantly resurrects one or more players",
      "at the location they died with no transition."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "be resurrected. Can use most Player based",
        "Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET ABILITY 1 ENABLED",
    "contexts": [
      "Enables or disables ability 1 for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose access",
        "to ability 1 is affected. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Enabled - Specifies whether the player or",
        "players are able to use ability 1. Expects",
        "a Boolean Value such as True, False, or",
        "Compare. Can use most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET ABILITY 2 ENABLED",
    "contexts": [
      "Enables or disables ability 2 for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose access",
        "to ability 2 is affected. Expects a Boolean",
        "Value such as True, False, or Compare. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Enabled - Specifies whether the player or",
        "players are able to use ability 2. Can use",
        "most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET AIM SPEED",
    "contexts": [
      "Sets the aim speed of one or more players",
      "to a percentage of their normal aim speed."
    ],
    "definitions": [
      [
        "Player - The player or players whose aim",
        "will be set. Can use most Player based Value",
        "Syntax for this value."
      ],
      [
        "Turn Speed Percent - The percentage of normal",
        "aim speed to which the player or players",
        "will set their aim speed. Can use most Number",
        "based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET DAMAGE DEALT",
    "contexts": [
      "Sets the damage dealt to one or more players",
      "of a percentage of their raw damage dealt.",
      "NOTE: Negative values do not heal enemies.",
      "Damage values of 0 or lower will not trigger script events."
    ],
    "definitions": [
      [
        "Player - The player or players whose damage",
        "dealt will be set. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Damage Dealt Percent - The percentage of",
        "raw damage dealt to which the player or",
        "players will set their damage dealt. Can",
        "use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET DAMAGE RECEIVED",
    "contexts": [
      "Sets the damage received of one or more",
      "players to a percentage of their raw damage",
      "received. NOTE: Negative values do not heal",
      "enemies. Damage values of 0 or lower will",
      "not trigger script events."
    ],
    "definitions": [
      [
        "Player - The player or players whose damage",
        "received will be set. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Damage Received Percent - The percentage",
        "of raw damage received to which the player",
        "or players will set their damage received.",
        "Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET FACING",
    "contexts": [
      "Sets the facing of one or more players to",
      "the specified direction."
    ],
    "definitions": [
      [
        "Player - The player or players whose facing",
        "will be set. Can use most Player based Value",
        "Syntax for this value."
      ],
      [
        "Direction - The unit direction in which",
        "the player or players will face. This value",
        "is normalized internally. Can use most Vector",
        "based Value Syntax."
      ],
      [
        "*Relative - Specifies direction is relative",
        "to world coordinates or the local coordinates",
        "of the player or players."
      ]
    ]
  },
  {
    "name": "SET GLOBAL VARIABLE",
    "contexts": [
      "Stores a value into a global variable, which",
      "a variable that belongs to the game itself."
    ],
    "definitions": [
      [
        "Variable - Specifies which Global Variable",
        "to store the value into. Specified by a",
        "single alphabetic letter (A through Z)."
      ],
      [
        "Value - The value that will be stored. Nearly",
        "any Value syntax can be used, however it",
        "is most common with Number based syntax."
      ]
    ]
  },
  {
    "name": "SET GLOBAL VARIABLE INDEX",
    "contexts": [
      "Finds or creates an array on a global variable,",
      "which is a variable that belongs to the",
      "game itself, then stores a value in the",
      "array at the specified index."
    ],
    "definitions": [
      [
        "Variable - Specifies which global variable’s",
        "value is the array to modify, if the variable’s",
        "value is not an array, then its value becomes",
        "an empty array. Specified by a single alphabetic",
        "letter (A through Z)."
      ],
      [
        "Index - The index of the array to modify.",
        "If the index is beyond the end of the array,",
        "the array is extended with the new elements",
        "given a value of zero. Can use most Number",
        "based Value Syntax with this value."
      ],
      [
        "Value - The value that will be stored into",
        "the array. Nearly any Value syntax can be",
        "used, however it is most common with Number based syntax."
      ]
    ]
  },
  {
    "name": "SET GRAVITY",
    "contexts": [
      "Sets the movement gravity for one or more",
      "players to a percentage of regular movement gravity."
    ],
    "definitions": [
      [
        "Player - The player or players whose movement",
        "gravity will be set. Can use most Player",
        "based Value Syntax with this value."
      ],
      [
        "Gravity Percent - The percentage of regular",
        "movement gravity to which the player or",
        "players will set their personal movement",
        "gravity. Can use most Number based Value",
        "Sytax with this value. 100% is the normal",
        "gravity level of the game. Less than that",
        "will decrease gravity (allowing higher jumps),",
        "higher amounts will result in higher gravity",
        "(causing shorter jumps)."
      ]
    ]
  },
  {
    "name": "SET HEALING DEALT",
    "contexts": [
      "Sets the healing dealt to one or more players",
      "of a percentage of their raw damage dealt.",
      "NOTE: Negative values do not damage enemies.",
      "Healing values of 0 or lower will not trigger script events."
    ],
    "definitions": [
      [
        "Player - The player or players whose healing",
        "dealt will be set. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Healing Dealt Percent - The percentage of",
        "raw healing dealt to which the player or",
        "players will set their healing dealt. Can",
        "use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET HEALING RECEIVED",
    "contexts": [
      "Sets the healing received of one or more",
      "players to a percentage of their raw healing",
      "received. NOTE: Negative values do not damage",
      "enemies. Healing values of 0 or lower will",
      "not trigger script events."
    ],
    "definitions": [
      [
        "Player - The player or players whose healing",
        "received will be set. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Healing Received Percent - The percentage",
        "of raw healing received to which the player",
        "or players will set their healing received.",
        "Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET INVISIBLE",
    "contexts": [
      "Causes one or more players to become invisible",
      "to either all other players or just enemies."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "become invisible. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Invisible to - Specifies for whom the player",
        "or players will be invisible. Can be set",
        "to All, Enemies, or None."
      ]
    ]
  },
  {
    "name": "SET MATCH TIME",
    "contexts": [
      "Sets the current match time (which is visible",
      "at the top of the screen). This can be used",
      "to shorten or extend the duration of a match",
      "or to change the duration of assemble heroes or setup."
    ],
    "definitions": [
      [
        "Time - The match time in seconds. Can use",
        "most Number based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET MAX HEALTH",
    "contexts": [
      "Sets the max health of one or more players",
      "as a percentage of their raw max health.",
      "This action will ensure that a player’s",
      "current health will not exceed the new max health."
    ],
    "definitions": [
      [
        "Player - The player or players whose max",
        "health will be set. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Health Percent - The percentage of raw max",
        "health to which the player or players will",
        "set their max health. Can use most Number",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET MOVE SPEED",
    "contexts": [
      "Sets the move speed of one or more players",
      "to a percentage of their raw move speed."
    ],
    "definitions": [
      [
        "Player - The player or players whose move",
        "speed will be set. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Health Percent - The percentage of raw move",
        "speed to which the player or players will",
        "set their move speed. Can use most Number",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET OBJECTIVE DESCRIPTION",
    "contexts": [
      "Sets the text at the top center of the screen",
      "that normally describes the objective to",
      "a message visible to specific players."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "see the message. Can use most Number based",
        "Player Syntax for this value."
      ],
      [
        "Header - The message to be displayed. Can",
        "use most String based Value Syntax for this value."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continously reevaluated.",
        "The message will keep asking for and using",
        "new values from reevaluated inputs. Can",
        "choose “Visible to and String” or “String”"
      ]
    ]
  },
  {
    "name": "SET PLAYER ALLOWED HEROES",
    "contexts": [
      "Sets the list of heroes available to one",
      "or more players. If a player’s current hero",
      "becomes unavailable, the player is forced",
      "to choose a different hero and respawn at",
      "an appropriate spawn location."
    ],
    "definitions": [
      [
        "Player - The player or players whose hero",
        "list is being set. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Hero - The hero or heroes that will be available.",
        "If no heroes are provided, the action has",
        "no effect. Can use most Hero based Value",
        "Syntax for this value including compatible Arrays."
      ]
    ]
  },
  {
    "name": "SET PLAYER SCORE",
    "contexts": [
      "Sets the score (kill count) of one or more",
      "players. This action only has an effect",
      "in free-for-all modes."
    ],
    "definitions": [
      [
        "Player - The player or players whose score",
        "will be set. Can use most Player based Value",
        "Syntax for this value."
      ],
      [
        "Score - The score that will be set. Can",
        "use most Number based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET PLAYER VARIABLE",
    "contexts": [
      "Stores a value into a player variable, which",
      "is a variable that belongs to a specific player."
    ],
    "definitions": [
      [
        "Player - The player or players whose variable",
        "will be set. If multiple players are provided,",
        "each of their variables will be set. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Variable - Specifies which Player Variable",
        "to store the value into. Specified by a",
        "single alphabetic letter (A through Z)."
      ],
      [
        "Value - The value that will be stored. Nearly",
        "any Value syntax can be used, however it",
        "is most common with Number based syntax."
      ]
    ]
  },
  {
    "name": "SET PLAYER VARIABLE AT INDEX",
    "contexts": [
      "Finds or creates an array on a player variable,",
      "which is a variable that belongs to a specific",
      "player, then stores a value in the array",
      "at the specified index."
    ],
    "definitions": [
      [
        "Player - The player or players whose variable",
        "will be set. If multiple players are provided,",
        "each of their variables will be set. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Variable - Specifies which player variable’s",
        "value is the array to modify, if the variable’s",
        "value is not an array, then its value becomes",
        "an empty array. Specified by a single alphabetic",
        "letter (A through Z)."
      ],
      [
        "Index - The index of the array to modify.",
        "If the index is beyond the end of the array,",
        "the array is extended with the new elements",
        "given a value of zero. Can use most Number",
        "based Value Syntax with this value."
      ],
      [
        "Value - The value that will be stored into",
        "the array. Nearly any Value syntax can be",
        "used, however it is most common with Number based syntax."
      ]
    ]
  },
  {
    "name": "SET PRIMARY FIRE ENABLED",
    "contexts": [
      "Enables or disables primary fire for one",
      "or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose access",
        "to primary fire is affected. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Enabled - Specifies whether the player or",
        "players are able to use primary fire. Expects",
        "a Boolean Value such as True, False, or",
        "Compare. Can use most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET PROJECTILE GRAVITY",
    "contexts": [
      "Sets the projectile gravity for one or more",
      "players to a percentage of regular projectile gravity."
    ],
    "definitions": [
      [
        "Player - The player or players whose projectile",
        "gravity will be set. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Projectile Gravity Percent - The percentage",
        "of the regular projectile gravity to which",
        "the player or players will set their personal",
        "projectile gravity. Can use most Number",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET PROJECTILE SPEED",
    "contexts": [
      "Sets the projectile speed for one or more",
      "players to a percentage of regular projectile speed."
    ],
    "definitions": [
      [
        "Player - The player or players whose projectile",
        "speed will be set. Can use most Player based",
        "Value Syntax for this value."
      ],
      [
        "Projectile Speed Percent - The percentage",
        "of the regular projectile speed to which",
        "the player or players will set their personal",
        "projectile speed. Can use most Number based",
        "Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET RESPAWN MAX TIME",
    "contexts": [
      "Sets the duration between death and respawn",
      "for one or more players that are already",
      "dead when this action is executed, the change",
      "takes effect on their next death."
    ],
    "definitions": [
      [
        "Player - The player or players whose respawn",
        "max time will is being defined. Can use",
        "most Player based Value Syntax for this value."
      ],
      [
        "Time - The duration between death and respawn",
        "in seconds. Can use most Number based Value",
        "Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET SECONDARY FIRE ENABLED",
    "contexts": [
      "Enables or disables secondary fire for one",
      "or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose access",
        "to secondary fire is affected. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Enabled - Specifies whether the player or",
        "players are able to use secondary fire.",
        "Expects a Boolean Value such as True, False,",
        "or Compare. Can use most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET SLOW MOTION",
    "contexts": [
      "Sets the simulation rate for the entire",
      "game, including all players, projectiles,",
      "effects, and game mode logic."
    ],
    "definitions": [
      [
        "Speed Percent - The simulation rate as a",
        "percentage of normal speed. Only rates up",
        "to 100% are allowed. Can use most Number",
        "based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET STATUS",
    "contexts": [
      "Applies a status to one or more players.",
      "This status will remain in effect for the",
      "specified duration or until it is cleared",
      "by the clear status action."
    ],
    "definitions": [
      [
        "Player - The player or players to whom the",
        "status will be applied. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Assister - Specifies a player to be awarded",
        "assist credit should the affected player",
        "or players be killed while the status is",
        "in effect. An assister of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax for this value."
      ],
      [
        "Status - The Status to be applied from the",
        "player or players. These behave similarly",
        "to statuses applied from hero abilities.",
        "Values include Hacked, Burning, Knocked",
        "Down, Asleep, Frozen, Unkillable, Invincible,",
        "Phased Out, Rooted, or Stunned."
      ],
      [
        "Duration - The duration of the status effect",
        "in seconds. To have a status that lasts",
        "until a clear status action is executed,",
        "proivide an arbitrarily long duration such",
        "as 9999. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET TEAM SCORE",
    "contexts": [
      "Sets the score for one or both teams. This",
      "action has no effect in free-for-all modes",
      "or modes without a team score."
    ],
    "definitions": [
      [
        "Team - The team or teams whose score will",
        "be set. Can use most Team based Value Syntax for this value."
      ],
      [
        "Score - The score that will be set. Can",
        "use most Number based Value Syntax for this value."
      ]
    ]
  },
  {
    "name": "SET ULTIMATE ABILITY ENABLED",
    "contexts": [
      "Enables or disables the ultimate ability",
      "of one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose access",
        "to their ultimate ability is affected. Can",
        "use most Player based Value Syntax for this value."
      ],
      [
        "Enabled - Specifies whether the player or",
        "players are able to use their ultimate ability.",
        "Expects a Boolean Value such as True, False,",
        "or Compare. Can use most Boolean based Value Syntax."
      ]
    ]
  },
  {
    "name": "SET ULTIMATE CHARGE",
    "contexts": [
      "Sets the ultimate charge or one or more",
      "players as a percentage of maximum charge."
    ],
    "definitions": [
      [
        "Player - The player or players whose ultimate",
        "charge will be set. Can use most Player",
        "based Value Syntax for this value."
      ],
      [
        "Charge Percent - The percentage of maximum",
        "charge. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SKIP",
    "contexts": [
      "Skips execution of a certain number of actions",
      "in the action list."
    ],
    "definitions": [
      [
        "Number of actions - The number of action",
        "to skip, not including this action. Can",
        "use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SKIP IF",
    "contexts": [
      "Skips execution of a certain number of actions",
      "in the action list if this action’s condition",
      "evaluates to true. If it does not, execution",
      "continues with the next action."
    ],
    "definitions": [
      [
        "Condition - Specifies whether the loop will",
        "occur. Can use most Conditional based Value",
        "Syntax for this value."
      ],
      [
        "Number of actions - The number of action",
        "to skip, not including this action. Can",
        "use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "SMALL MESSAGE",
    "contexts": [
      "Displays a small message beneath the reticle",
      "that is visible to specific players."
    ],
    "definitions": [
      [
        "Visible to - One or more players who will",
        "see the message. Can use most Player based Value Syntax."
      ],
      [
        "Header - The message to be displayed. Can",
        "use most String based Value Syntax to specify."
      ]
    ]
  },
  {
    "name": "START ACCELERATING",
    "contexts": [
      "Starts accelerating one or more players",
      "in a specified location."
    ],
    "definitions": [
      [
        "Player - The player or players that will",
        "begin accelerating. Can use most Player",
        "based Value Syntax."
      ],
      [
        "Direction - The unit direction in which",
        "the acceleration will be applied. This value",
        "is normalized internally. Can use most Vector",
        "based Value Syntax to specify."
      ],
      [
        "Rate - The rate of acceleration in meters",
        "per second squared. This value may need",
        "to be quite high in order to overcome gravity",
        "and/or surface friction. Can use most Number",
        "based Value Syntax."
      ],
      [
        "Max Speed - The speed at which acceleration",
        "will stop for the player or players. It",
        "may not be possible to reach this speed",
        "due to gravity and/or surface friction.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Relative - Specifies whether direction is",
        "relavtive to the world coordinates or the",
        "local coordinates of the player or players."
      ],
      [
        "Reevaluation - Specifies which of this actions",
        "inputs will be continously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can choose from “Direction, Rate, and Max",
        "Speed” or “None”."
      ]
    ]
  },
  {
    "name": "START CAMERA",
    "contexts": [
      "Places your camera at a location, facing a direction."
    ],
    "definitions": [
      [
        "Player - The player executing this rule.",
        "As specified by the event, may be the same",
        "as the attacker or the victim. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Eye Position - The position of the camrea,",
        "reevaluates continously. Can use most Vector",
        "based Value Syntax to specify."
      ],
      [
        "Look at position - Where the camera looks",
        "at, reevaluates continously. Can use most",
        "Vector based Value Syntax to specify."
      ],
      [
        "Blend Speed - How fast to blend the camera",
        "movement as positions change. 0 means do",
        "not blend at all and just change positions",
        "instantly. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "START DAMAGE MODIFICATION",
    "contexts": [
      "Starts modifying how much damage one or",
      "more receivers will receive from one or",
      "more damagers. A reference to this damage",
      "modification can be obtained from the last",
      "damage modification ID value. This action",
      "will fail if too many damage modifications",
      "have been started."
    ],
    "definitions": [
      [
        "Receivers - The player or players whose",
        "incoming damage will be modified. Can use",
        "most Player based Value Syntax."
      ],
      [
        "Damagers - The player or players whose outgoing",
        "damage will be modified (when attacking",
        "the receivers). Can use most Player based Value Syntax."
      ],
      [
        "Damage Percent - The percentage of damage",
        "that will apply to receivers when attacked",
        "by damagers. Can use most Number based Value",
        "Syntax to specify."
      ],
      [
        "Reevaluation - Specifies which of this action’s",
        "inputs will be continously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. Can",
        "choose from “Receivers, Damagers, and Damage",
        "Percent”, “Receivers and Damagers”, or “None”."
      ]
    ]
  },
  {
    "name": "START DAMAGE OVER TIME",
    "contexts": [
      "Starts an instance of damage over time,",
      "this DOT will persist for the specified",
      "duration or until stopped by script. To",
      "obtain a reference to this DOT, use the",
      "last damage over time to value."
    ],
    "definitions": [
      [
        "Receivers - One or more players who will",
        "receive the damage over time. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Damager - The player who will receive credit",
        "for the damage. A damager of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Duration - The duration of the damage over",
        "time in seconds. To have a DOT that lasts",
        "until stopped by script, provide an arbitrarily",
        "long duration such as 9999. Can use most",
        "Number based Value Syntax to specify."
      ],
      [
        "Damage Per Second - The damage per second",
        "for the damage over time. Can use most Number",
        "based Value Syntax to specify."
      ]
    ]
  },
  {
    "name": "START FACING",
    "contexts": [
      "Starts turning one or more players to face",
      "the specified direction."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "start turning. Can use most Player based Value Syntax."
      ],
      [
        "Direction - The unit direction in which",
        "the player or players will eventually face.",
        "Can use most Vector based Value Syntax."
      ],
      [
        "Turn Rate - The turn rate in degrees per",
        "second. Can use most Number based Value",
        "Syntax to specify."
      ],
      [
        "Relative - Specifies whether direction is",
        "relative to the world coordinates or the",
        "local coordinates of the player or players."
      ],
      [
        "Reevaluation - Specifies which of this actions",
        "inputs will be continously reevaluated.",
        "This action will keep asking for and using",
        "new values from reevaluated inputs. You",
        "can choose from “Direction and Turn Rate” or “None”."
      ]
    ]
  },
  {
    "name": "START FORCING PLAYER TO BE HERO",
    "contexts": [
      "Starts forcing one or more players to be",
      "a specified hero and, if necessary, respawns",
      "them immediately in their current locaiton.",
      "This will be the only hero available to",
      "the player or players until, the stop forcing",
      "player to be hero action is executed."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "be forced to be a specified hero. Can use",
        "most Player based Value Syntax."
      ],
      [
        "Hero - The hero that the player or players",
        "will be forced to be. Can use most Hero",
        "based Value Syntax."
      ]
    ]
  },
  {
    "name": "START FORCING SPAWN ROOM",
    "contexts": [
      "Forces a team to spawn in a particular spawn",
      "room, regardless of the sapwn room normally",
      "used by the game mode. This action only",
      "has an effect in Assault, Hybrid, and Payload Maps."
    ],
    "definitions": [
      [
        "Team - The team whose spawn room will be",
        "forced. Can use most Team based Value Syntax."
      ],
      [
        "Room - The number of the spawn room to be",
        "forced. 0 is the first spawn room, 1 is",
        "the second, and 2 is the third. If this",
        "specified spawn room does not exist. Players",
        "will use the normal spawn room. Can use",
        "most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "START FORCING THROTTLE",
    "contexts": [
      "Defines minimum and maximum movement input",
      "values for one or more players. Possibly",
      "forcing or preventing movement."
    ],
    "definitions": [
      [
        "Player - The player or players whose movement",
        "whill be forced or limited. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Min Forward - Sets the minimum run forward",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Max Forward - Sets the maximum run forward",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Min Backward - Sets the minimum run backward",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Max Backward - Sets the maximum run backward",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Min Sideways - Sets the minimum run sideways",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ],
      [
        "Max Forward - Sets the maximum run sideways",
        "amount. 0 allows the player or players to",
        "stop while 1 forces full forward movement.",
        "Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "START HEAL OVER TIME",
    "contexts": [
      "Starts an instance of damage over time,",
      "this HOT will persist for the specified",
      "duration or until stopped by script. To",
      "obtain a reference to this HOT, use the",
      "last damage over time to value."
    ],
    "definitions": [
      [
        "Player - One or more players who will receive",
        "the heal over time. Can use most Player",
        "based Value Syntax."
      ],
      [
        "Healer - The player who will receive credit",
        "for the heal. A damager of null indicates",
        "no player will receive credit. Can use most",
        "Player based Value Syntax."
      ],
      [
        "Duration - The duration of the heal over",
        "time in seconds. To have a HOT that lasts",
        "until stopped by script, provide an arbitrarily",
        "long duration such as 9999. Can use most",
        "Number based Value Syntax to specify."
      ],
      [
        "Damage Per Second - The heal per second",
        "for the heal over time. Can use most Number",
        "based Value Syntax to specify."
      ]
    ]
  },
  {
    "name": "START HOLDING BUTTON",
    "contexts": [
      "Forces one or more players to hold a button",
      "virtually until stopped by the stop holding button action."
    ],
    "definitions": [
      [
        "Player - The player or players who are holding",
        "a button virtually. Can use most Player",
        "based Value Syntax."
      ],
      [
        "Button - The logical button that is being held virtually."
      ]
    ]
  },
  {
    "name": "STOP ACCELERATING",
    "contexts": [
      "Stops the acceleration started by the start",
      "accelerating action for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "stop accelerating. Can use most Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP ALL DAMAGE MODIFICATIONS",
    "contexts": [
      "Stops the all damage modifications that",
      "were started using the start damage modification action."
    ],
    "definitions": []
  },
  {
    "name": "STOP ALL DAMAGE OVER TIME",
    "contexts": [
      "Stops all damage over time started by the",
      "start damage over time or one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose scripted",
        "damage over time will stop. Can use most",
        "Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP ALL HEAL OVER TIME",
    "contexts": [
      "Stops all heal over time started by the",
      "start heal over time or one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose scripted",
        "heal over time will stop. Can use most Player",
        "based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP CAMERA",
    "contexts": [
      "Stops all forced camera positions started",
      "by the start camera or one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players whose forced",
        "camera positions will stop. Can use most",
        "Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP CHASING GLOBAL VARIABLE",
    "contexts": [
      "Stops an in-progress chase of a global variable,",
      "leaving it at its current value."
    ],
    "definitions": [
      [
        "Variable - Specifies which global variable",
        "to stop modifying. Specified by a single",
        "alphabetic letter (A through Z)."
      ]
    ]
  },
  {
    "name": "STOP CHASING PLAYER VARIABLE",
    "contexts": [
      "Stops an in-progress chase of a player variable,",
      "leaving it at its current value."
    ],
    "definitions": [
      [
        "Player - The player whose variable will",
        "stop changing. If multiple players are provided,",
        "each of their variables will stop changing.",
        "Can use most Player based Value Syntax."
      ],
      [
        "Variable - Specifies which player variable",
        "to stop modifying. Specified by a single",
        "alphabetic letter (A through Z)."
      ]
    ]
  },
  {
    "name": "STOP DAMAGE MODIFICATION",
    "contexts": [
      "Stops a damage modification that was started",
      "by the start damage modification action"
    ],
    "definitions": [
      [
        "Damage modification ID - Specifies which",
        "damage modification instance to stop, this",
        "ID may be the last damage modification ID",
        "or a variable into which last damage modification",
        "ID was earlier stored. Can use most Number",
        "based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP DAMAGE OVER TIME",
    "contexts": [
      "Stops an instance of damage over time that",
      "was started by the start damage over time action"
    ],
    "definitions": [
      [
        "Damage Over Time ID - Specifies which damage",
        "over time instance to stop, this ID may",
        "be the last damage over time ID or a variable",
        "into which last damage over time ID was",
        "earlier stored. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP FACING",
    "contexts": [
      "Stops the turning started by the start facing",
      "action for or one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "stop turning. Can use most Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP FORCING PLAYER TO BE HERO",
    "contexts": [
      "Stops forcing one or more players to be",
      "a specified hero. This will not respawn",
      "the player or players, but it will restore",
      "their availablity the next time they go",
      "to select a hero."
    ],
    "definitions": [
      [
        "Player - The player or players who will",
        "no longer be forced to be a specific hero.",
        "Can use most Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP FORCING SPAWN ROOM",
    "contexts": [
      "Undoes the effect of start forcing spawn",
      "room action for the specified team."
    ],
    "definitions": [
      [
        "Team - The team that will resume using their",
        "normal spawn room. Can use most Team based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP FORCING THROTTLE",
    "contexts": [
      "Undoes the effect of start forcing throttle",
      "action for one or more players"
    ],
    "definitions": [
      [
        "Player - The player or players whose movement",
        "inout will be restored. Can use most Player",
        "based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP HEAL OVER TIME",
    "contexts": [
      "Stops an instance of heal over time that",
      "was started by the start heal over time action"
    ],
    "definitions": [
      [
        "Heal Over Time ID - Specifies which heal",
        "over time instance to stop, this ID may",
        "be the last heal over time ID or a variable",
        "into which last heal over time ID was earlier",
        "stored. Can use most Number based Value Syntax."
      ]
    ]
  },
  {
    "name": "STOP HOLDING BUTTON",
    "contexts": [
      "Undoes the effect of the start holding button",
      "action for one or more players."
    ],
    "definitions": [
      [
        "Player - The player or players who are no",
        "longer holding a button virtually. Can use",
        "most Player based Value Syntax."
      ]
    ]
  },
  {
    "name": "TELEPORT",
    "contexts": [
      "Teleports one or more players to the specified location."
    ],
    "definitions": [
      [
        "Player - The player or players to teleport.",
        "Can use most Player based Value Syntax."
      ],
      [
        "Position - The position to which the player",
        "or players will teleport. If a player is",
        "providedm the position of the player is",
        "used. Can use most Vector based Value Syntax."
      ]
    ]
  },
  {
    "name": "UNPAUSE MATCH TIME",
    "contexts": [
      "Unpauses the match time."
    ],
    "definitions": []
  },
  {
    "name": "WAIT",
    "contexts": [
      "Pauses the execution of the action list,",
      "unless the wait is interrupted. The remainder",
      "of the actions will execute after the pause."
    ],
    "definitions": [
      [
        "Time - The duration of the pause. A minimum",
        "value of 0.250 seconds is required. Can",
        "use most Number based Value Syntax."
      ],
      [
        "Wait Behavior - Specifies if and how the",
        "wait can be interrupted. If the condition",
        "list is ignored, the wait will not be interrupted,",
        "otherwise, the condition list will determine",
        "if and when the action list will abort or restart."
      ]
    ]
  },
  {
    "name": "ABSOLUTE VALUE",
    "contexts": [
      "The absolute value is a measure of how far",
      "the number is from zero. If you think of",
      "a number line, with zero in the center,",
      "all you’re really doing is asking how far",
      "away you are from this zero point. For example",
      "the Absolute Value of 4 is 4 and the absolute",
      "value of -6 is 6."
    ],
    "definitions": [
      [
        "Value - You can specify any Value Syntax",
        "to define the Absolute Value."
      ]
    ]
  },
  {
    "name": "ADD",
    "contexts": [
      "The sum of two numbers or vectors. This",
      "value will add the two specified values."
    ],
    "definitions": [
      [
        "Value - You can specify any Value Syntax",
        "to define either addend."
      ]
    ]
  },
  {
    "name": "ALL DEAD PLAYERS",
    "contexts": [
      "An array containing all dead players on",
      "a team in a match. A player is defined as",
      "being dead when they are eliminated but",
      "have not yet respawned back into the game."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define the array."
      ]
    ]
  },
  {
    "name": "ALL HEROES",
    "contexts": [
      "An array of all heroes in Overwatch. Not",
      "to be confused with the All Players array"
    ],
    "definitions": []
  },
  {
    "name": "ALL LIVING PLAYERS",
    "contexts": [
      "An array containing all living players on",
      "a team in a match. A player is defined as",
      "being alive when they are spawned into the",
      "game but have not yet been eliminated since spawning."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define the array."
      ]
    ]
  },
  {
    "name": "ALL PLAYERS",
    "contexts": [
      "An array containing all players on a team in a match."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define the array."
      ]
    ]
  },
  {
    "name": "ALL PLAYERS NOT ON OBJECTIVE",
    "contexts": [
      "An array containing all players occupying",
      "neither a payload nor a control point (either",
      "on a team or in a match)."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define the array."
      ]
    ]
  },
  {
    "name": "ALL PLAYERS ON OBJECTIVE",
    "contexts": [
      "An array containing all players occupying",
      "either a payload or a control point (either",
      "on a team or in a match)."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define the array."
      ]
    ]
  },
  {
    "name": "ALLOWED HEROES",
    "contexts": [
      "The array of heroes from which the specified",
      "player is currently allowed to select."
    ],
    "definitions": [
      [
        "Player - You can specify any Player Syntax",
        "to define the array."
      ]
    ]
  },
  {
    "name": "ALTITUDE OF",
    "contexts": [
      "The player’s current height in meters above",
      "a surface. Results in a 0 whenever the place",
      "is on a surface."
    ],
    "definitions": [
      [
        "Player - You can specify any Player Syntax",
        "to define the array."
      ]
    ]
  },
  {
    "name": "AND",
    "contexts": [
      "Whether both of the two inputs are true",
      "or equivalent to true."
    ],
    "definitions": [
      [
        "Value - You can specify any Value Syntax",
        "to define both of the required values."
      ]
    ]
  },
  {
    "name": "ANGLE DIFFERENCE",
    "contexts": [
      "The difference between two angles, after",
      "the angles are wrapped within +/- 180 of",
      "each other, the result is positive if the",
      "second angle is greater than the first angle,",
      "otherwise the result is zero or negative."
    ],
    "definitions": [
      [
        "Angle - You can specify any Angle Syntax",
        "to define both of the required values."
      ]
    ]
  },
  {
    "name": "APPEND TO ARRAY",
    "contexts": [
      "A copy of an array with one or more values",
      "appended to the end."
    ],
    "definitions": [
      [
        "Array - You must specify the Array Syntax",
        "you are adding the value to."
      ],
      [
        "Value - You must specify the Value Syntax",
        "that you are adding to the array."
      ]
    ]
  },
  {
    "name": "ARRAY CONTAINS",
    "contexts": [
      "Whether the specified array contains the",
      "specified value."
    ],
    "definitions": [
      [
        "Array - You must specify the Array Syntax",
        "you are comparing the value to."
      ],
      [
        "Value - You must specify the Value Syntax",
        "that you are comparing to the array."
      ]
    ]
  },
  {
    "name": "ARRAY SLICE",
    "contexts": [
      "A copy of the specified array containing",
      "only values from a specified index range."
    ],
    "definitions": [
      [
        "Array - You must specify the Array Syntax",
        "you are comparing the value to."
      ],
      [
        "Start Index - The first index of the range.",
        "Can use most Value Syntax to specify with."
      ],
      [
        "Count - The number of elements in the resulting",
        "array. The resulting array will contain",
        "fewer elements if the specified range exceeds",
        "the bounds of the array. Can use any Number-based",
        "Value Syntax to specify with."
      ]
    ]
  },
  {
    "name": "ATTACKER",
    "contexts": [
      "The player that dealt damage for the event",
      "currently being processed by this rule.",
      "May be the same as the victim or the event player."
    ],
    "definitions": []
  },
  {
    "name": "BACKWARD",
    "contexts": [
      "Shorthand for the direction vector(0, 0,",
      "-1) which points backwards."
    ],
    "definitions": []
  },
  {
    "name": "CLOSEST PLAYER TO",
    "contexts": [
      "The player closest to a position, optionally",
      "restricted by team."
    ],
    "definitions": [
      [
        "Center - The position to which to measure",
        "proximity. Can use most Value Syntax related",
        "to reporting a position in the map."
      ],
      [
        "Team - You can specify any Team Syntax to",
        "restrict which players is reported when",
        "defining this value."
      ]
    ]
  },
  {
    "name": "COMPARE",
    "contexts": [
      "Whether the comparison of the two inputs is true."
    ],
    "definitions": [
      [
        "Value - The left hand side of the comparison.",
        "This may be any value type if the operation",
        "is == or =!, otherwise real numbers are",
        "expected. Can use most Value Syntax for the comparison."
      ],
      [
        "Condition - One of the standard conditions",
        "to use for comparison. See the Condition",
        "section for details."
      ],
      [
        "Value - The right hand side of the comparison.",
        "This may be any value type if the operation",
        "is == or =!, otherwise real numbers are",
        "expected. Can use most Value Syntax for the comparison."
      ]
    ]
  },
  {
    "name": "CONTROL MODE SCORING PERCENTAGE",
    "contexts": [
      "The score percentage for the specified team",
      "in the control mode."
    ],
    "definitions": [
      [
        "Team - You can specify any Team Syntax to",
        "define which team reported when defining this value."
      ]
    ]
  },
  {
    "name": "CONTROL MODE SCORING TEAM",
    "contexts": [
      "The team that is currently accumulating",
      "score percentage in control mode Results",
      "in all if neither team is accumulating score."
    ],
    "definitions": []
  },
  {
    "name": "COSINE FROM DEGREES",
    "contexts": [
      "The cosine of a specified angle in degrees.",
      "The cosine of the angle is equal to the",
      "length of the adjacent side divided by the",
      "length of the hypotenuse."
    ],
    "definitions": [
      [
        "Angle - You can specify any Angle Syntax",
        "to define this value."
      ]
    ]
  },
  {
    "name": "COSINE FROM RADIANS",
    "contexts": [
      "The cosine of a specified angle in radians.",
      "The cosine of the angle is equal to the",
      "length of the adjacent side divided by the",
      "length of the hypotenuse. A radian is a",
      "unit of angle, equal to an angle at the",
      "center of a circle whose arc is equal in",
      "length to the radius."
    ],
    "definitions": [
      [
        "Angle - You can specify any Angle Syntax",
        "to define this value."
      ]
    ]
  },
  {
    "name": "COUNT OF",
    "contexts": [
      "The number of elements in the specified array."
    ],
    "definitions": [
      [
        "Array - You must specify the Array Syntax",
        "you are counting the elements to."
      ]
    ]
  },
  {
    "name": "CROSS PRODUCT",
    "contexts": [
      "The cross product of the specified values."
    ],
    "definitions": [
      [
        "Value - You must specify the first Value",
        "Syntax to compare to the second."
      ],
      [
        "Value - You must specify the first Value",
        "Syntax to compare to the second."
      ]
    ]
  },
  {
    "name": "CURRENT ARRAY ELEMENT",
    "contexts": [
      "The current array element being considered.",
      "Only meaningful during the evaluation of",
      "values such as filtered array and sorted array."
    ],
    "definitions": []
  },
  {
    "name": "DIRECTION FROM ANGLES",
    "contexts": [
      "The unit-length direction vector corresponding",
      "to the specified angles."
    ],
    "definitions": [
      [
        "Horizontal Angle - The horizontal angle",
        "in degrees used to construct the resulting",
        "vector. Most angle based Value Syntax can be used here."
      ],
      [
        "Vertical Angle - The vertical angle in degrees",
        "used to construct the resulting vector.",
        "Most angle based Value Syntax can be used here."
      ]
    ]
  },
  {
    "name": "DIRECTION TOWARDS",
    "contexts": [
      "The unit-length direction vector from position to another."
    ],
    "definitions": [
      [
        "Start Pos - The position from which the",
        "resulting direction vector will point. Most",
        "positional based Value Syntax can be used here."
      ],
      [
        "End Pos - The position to which the resulting",
        "direction vector will point. Most positional",
        "based Value Syntax can be used here."
      ]
    ]
  },
  {
    "name": "DISTANCE BETWEEN",
    "contexts": [
      "The distance between two positions in meters."
    ],
    "definitions": [
      [
        "Start Pos - One of the two positions used",
        "in the distance measurement. Most positional",
        "based Value Syntax can be used here."
      ],
      [
        "End Pos - One of the two positions used",
        "in the distance measurement. Most positional",
        "based Value Syntax can be used here."
      ]
    ]
  },
  {
    "name": "DIVIDE",
    "contexts": [
      "The ratio of two numbers or vectors. A vector",
      "divided by a number will yield a scaled",
      "vector. Division by zero results in zero."
    ],
    "definitions": [
      [
        "Value - The left-hand operand, may be any",
        "value that results in a number or a vector.",
        "Any Value Syntax may be used here."
      ],
      [
        "Value - The right-hand operand, may be any",
        "value that results in a number or a vector.",
        "Any Value Syntax may be used here."
      ]
    ]
  },
  {
    "name": "DOT PRODUCT",
    "contexts": [
      "The dot product of the specified values.",
      "The dot product tells you what amount of",
      "one vector goes in the direction of another."
    ],
    "definitions": [
      [
        "Value - One of the two vector operands of",
        "the dot product. Any positional based Syntax",
        "may be used here."
      ],
      [
        "Value - One of the two vector operands of",
        "the dot product. Any positional based Syntax",
        "may be used here."
      ]
    ]
  },
  {
    "name": "DOWN",
    "contexts": [
      "Shorthand for the direction vector(0, -1,",
      "0) which points down."
    ],
    "definitions": []
  },
  {
    "name": "EMPTY ARRAY",
    "contexts": [
      "An array with no elements."
    ],
    "definitions": []
  },
  {
    "name": "ENTITY EXISTS",
    "contexts": [
      "Whether the specified player, icon entity,",
      "or effect entity still exists. Useful for",
      "determining if a player has left the match",
      "or an entity has been destroyed."
    ],
    "definitions": [
      [
        "Entity - The player, icon entity, or effect",
        "entity whose existance to check."
      ]
    ]
  },
  {
    "name": "EVENT PLAYER",
    "contexts": [
      "The player executing the rule, as specified",
      "by the event, may be the same as the attacker or victim."
    ],
    "definitions": []
  },
  {
    "name": "FACING DIRECTION OF",
    "contexts": [
      "The unit-length directional vector of a",
      "player’s current facing relative to the",
      "world. This value includes both horizontal",
      "and vertical facing."
    ],
    "definitions": [
      [
        "Player - The player whose facing direction",
        "to acquire. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "FALSE",
    "contexts": [
      "The Boolean value of false."
    ],
    "definitions": []
  },
  {
    "name": "FARTHEST PLAYER FROM",
    "contexts": [
      "The player farthest to a position, optionally",
      "restricted by team."
    ],
    "definitions": [
      [
        "Center - The position to which to measure",
        "proximity. Can use most Value Syntax related",
        "to reporting a position in the map."
      ],
      [
        "Team - You can specify any Team Syntax to",
        "restrict which players is reported when",
        "defining this value."
      ]
    ]
  },
  {
    "name": "FILTERED ARRAY",
    "contexts": [
      "A copy of the specified array with any values",
      "that do not match the specified condition removed."
    ],
    "definitions": [
      [
        "Array - The array whose copy will be filtered.",
        "Can use most Array Syntax to specify."
      ],
      [
        "Condition - The condition that is evaluated",
        "for each element of the copied array. If",
        "the condition is true, the element is kept",
        "in the copied array. Use the current array",
        "element value to reference the element of",
        "the array currently being considered."
      ]
    ]
  },
  {
    "name": "FIRST OF",
    "contexts": [
      "The value at the started of the specified",
      "array. Results in a 0 if the specified array is empty."
    ],
    "definitions": [
      [
        "Array - The array from which the value is",
        "acquired. Can use most Array Syntax to specify."
      ]
    ]
  },
  {
    "name": "FLAG POSITION",
    "contexts": [
      "The position of a specific team’s flag in",
      "Capture the Flag."
    ],
    "definitions": [
      [
        "Team - The team whose flag position to acquire."
      ]
    ]
  },
  {
    "name": "FORWARD",
    "contexts": [
      "Shorthand for the direction vector(0, 0,",
      "1) which points forward."
    ],
    "definitions": []
  },
  {
    "name": "GLOBAL VARIABLE",
    "contexts": [
      "The current value of a global variable,",
      "which is a variable which belongs to the",
      "custom game itself."
    ],
    "definitions": [
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ]
    ]
  },
  {
    "name": "HAS SPAWNED",
    "contexts": [
      "Whether an entity has spawned in the world.",
      "Results in false for players who have not",
      "chosen a hero yet."
    ],
    "definitions": [
      [
        "Entity - The player, icon entity, or effect",
        "entity whose presence in world to check."
      ]
    ]
  },
  {
    "name": "HAS STATUS",
    "contexts": [
      "Whether the specified player has the specified",
      "status, either from the set status action",
      "or from a non-scripted game mechanic."
    ],
    "definitions": [
      [
        "Player - The player whose status to check."
      ],
      [
        "Status - The status to check for. Values",
        "include Hacked, Burning, Knocked Down, Asleep,",
        "Frozen, Unkillable, Invincible, Phased Out,",
        "Rooted, or Stunned."
      ]
    ]
  },
  {
    "name": "HEALTH",
    "contexts": [
      "The current health of a player including",
      "armor and shields."
    ],
    "definitions": [
      [
        "Player - The player whose health to acquire."
      ]
    ]
  },
  {
    "name": "HEALTH PERCENT",
    "contexts": [
      "The current health of a player as a percentage",
      "including armor and shields."
    ],
    "definitions": [
      [
        "Player - The player whose health percentage to acquire."
      ]
    ]
  },
  {
    "name": "HERO",
    "contexts": [
      "A hero constant. Specifies one of the available",
      "heroes by name in the game."
    ],
    "definitions": [
      [
        "Hero - A hero constant. (i.e. Tracer, Reaper,",
        "Mercy, Reinhardt. etc.)"
      ]
    ]
  },
  {
    "name": "HERO ICON STRING",
    "contexts": [
      "Converts a hero parameter into a string",
      "that shows up as an icon."
    ],
    "definitions": [
      [
        "Value - The hero that will be converted as an icon."
      ]
    ]
  },
  {
    "name": "HERO OF",
    "contexts": [
      "The Current Hero of a Player."
    ],
    "definitions": [
      [
        "Player - The player whose hero to acquire.",
        "Can use most player based Value Syntax to",
        "retrieve this value."
      ]
    ]
  },
  {
    "name": "HORIZONTAL ANGLE FROM DIRECTION",
    "contexts": [
      "The horizontal angle in degrees corresponding",
      "to the specified direction vector."
    ],
    "definitions": [
      [
        "Direction - The direction vector from which",
        "to acquire a horizontal angle in degrees.",
        "The vector is unitized before calculation",
        "begins. Can use most Vector based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "HORIZONTAL ANGLE TOWARDS",
    "contexts": [
      "The horizontal angle in degrees from a player’s",
      "current forward direction to the specified",
      "position. The result is positive if the",
      "position is on the player’s left, otherwise",
      "the result is zero or negative."
    ],
    "definitions": [
      [
        "Player - The player whose current facing",
        "angle begins. Can use most player based",
        "Value Syntax to retrieve this value."
      ],
      [
        "Position - The position in the world in",
        "where the angle ends."
      ]
    ]
  },
  {
    "name": "HORIZONTAL FACING ANGLE OF",
    "contexts": [
      "The directional angle in degrees of a player’s",
      "current facing relative to the world. This",
      "value increases as the player rotates to",
      "the left (wrapping around at +/- 180)."
    ],
    "definitions": [
      [
        "Player - The player whose facing direction",
        "to acquire. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "HORIZONTAL SPEED OF",
    "contexts": [
      "The current horizontal speed of a player",
      "in meters per second. This measurement excludes",
      "all vertical motion."
    ],
    "definitions": [
      [
        "Player - The player whose facing direction",
        "to acquire. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "INDEX OF ARRAY VALUE",
    "contexts": [
      "The index of a value within an array or",
      "-1 if no such value can be found."
    ],
    "definitions": [
      [
        "Array - The array in which to search for",
        "the specified value. Can use most Array",
        "based Value Syntax to retrieve this value."
      ],
      [
        "Value - The value for which to search. Can",
        "use most Number based Value Syntax to retrive this value."
      ]
    ]
  },
  {
    "name": "IS ALIVE",
    "contexts": [
      "Determines whether a player is alive. Returns",
      "a Boolean value."
    ],
    "definitions": [
      [
        "Player - The player whose life to check.",
        "Can use most player based Value Syntax to",
        "retrive this value."
      ]
    ]
  },
  {
    "name": "IS ASSEMBLING HEROES",
    "contexts": [
      "Whether the match is currently in its assemble heroes phase."
    ],
    "definitions": []
  },
  {
    "name": "IS BETWEEN ROUNDS",
    "contexts": [
      "Whether the match is between rounds."
    ],
    "definitions": []
  },
  {
    "name": "IS BUTTON HELD",
    "contexts": [
      "Whether a player is holding a specific button."
    ],
    "definitions": [
      [
        "Player - The player whose button to check.",
        "Can use most player based Value Syntax to",
        "retrieve this value."
      ],
      [
        "Button - The button to check. Designed by",
        "any action inputs by ability but not directional",
        "inputs. (i.e. Primary Fire, Secondary Fire,",
        "Ultimate Ability, Jump, Crouch, etc.)"
      ]
    ]
  },
  {
    "name": "IS COMMUNICATING",
    "contexts": [
      "Whether a player is using a specific communication",
      "type (such as emote, using a voice line, etc.)."
    ],
    "definitions": [
      [
        "Player - The player whose communication",
        "status to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ],
      [
        "Type - The type of communication to consider.",
        "The duration of emotes is exact, the duration",
        "of voice lines is assumed to be 4 seconds,",
        "and all other durations are assumed to be",
        "2 seconds. Any of the four emote slots,",
        "four voice lines slots, or any standard",
        "communication (Need healing, Ultimate Status,",
        "etc.) can be designated."
      ]
    ]
  },
  {
    "name": "IS COMMUNICATING ANY",
    "contexts": [
      "Whether a player is using any communication",
      "type (such as emoting, using a voice line, etc.)"
    ],
    "definitions": [
      [
        "Player - The player whose communication",
        "status to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS COMMUNICATING ANY EMOTE",
    "contexts": [
      "Whether a player is using a emote."
    ],
    "definitions": [
      [
        "Player - The player whose emoting status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS COMMUNICATING ANY VOICE LINE",
    "contexts": [
      "Whether a player is using a voice line.",
      "(The duration of a voice line is assumed",
      "to be 4 seconds.)"
    ],
    "definitions": [
      [
        "Player - The player whose voice line status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS CONTROL MODE POINT LOCKED",
    "contexts": [
      "Whether the point is locked in control mode."
    ],
    "definitions": []
  },
  {
    "name": "IS CROUCHING",
    "contexts": [
      "Whether a player is crouching."
    ],
    "definitions": [
      [
        "Player - The player whose crouching status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS CTF MODE IN SUDDEN DEATH",
    "contexts": [
      "Whether the current game of capture the",
      "flag is in sudden death."
    ],
    "definitions": []
  },
  {
    "name": "IS DEAD",
    "contexts": [
      "Whether a player is dead."
    ],
    "definitions": [
      [
        "Player - The player whose death to check.",
        "Can use most player based Value Syntax to",
        "retrieve this value."
      ]
    ]
  },
  {
    "name": "IS FIRING PRIMARY",
    "contexts": [
      "Whether the specified player’s primary weapon",
      "attack is being used."
    ],
    "definitions": [
      [
        "Player - The player whose primary weapon",
        "attack to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS FIRING SECONDARY",
    "contexts": [
      "Whether the specified player’s secondary",
      "weapon attack is being used."
    ],
    "definitions": [
      [
        "Player - The player whose secondary weapon",
        "attack to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS FLAG AT BASE",
    "contexts": [
      "Whether a specific team’s flag is at its",
      "base in capture the flag."
    ],
    "definitions": [
      [
        "Team - The player whose flag to check. Can",
        "use most team based Value Syntax to retrive this value."
      ]
    ]
  },
  {
    "name": "IS GAME IN PROGRESS",
    "contexts": [
      "Whether the main phase of the match is in",
      "progress (during which time combat and scoring are allowed)."
    ],
    "definitions": []
  },
  {
    "name": "IS HERO BEING PLAYED",
    "contexts": [
      "Whether a specific hero is being played",
      "(either on a team or in the match)."
    ],
    "definitions": [
      [
        "Hero - The hero to check for play. Can use",
        "most team based Value Syntax to retrive",
        "this value. Any applicable Hero based Value",
        "Syntax can be used."
      ],
      [
        "Team - The team or teams on which to check",
        "for the hero being played. Can use most",
        "team based Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS IN AIR",
    "contexts": [
      "Whether a player is airborne."
    ],
    "definitions": [
      [
        "Player - The player whose airborne status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS IN LINE OF SIGHT",
    "contexts": [
      "Whether two positions have line of sight",
      "with each other."
    ],
    "definitions": [
      [
        "Start Pos - The start position for the line",
        "of sight check. Most positional based Value",
        "Syntax can be used here."
      ],
      [
        "End Pos - The end position for the line",
        "of sight check. Most positional based Value",
        "Syntax can be used here."
      ],
      [
        "Barriers - Defines how barriers affect line",
        "of sight, when considering whether a barrier",
        "belongs to an enemy, the allegiance of the",
        "player provided to start pos (if any) is",
        "used. Can be set to “Barriers do not block",
        "LOS”, Enemy barriers block LOS\", and “All",
        "barriers block LOS”."
      ]
    ]
  },
  {
    "name": "IS IN SETUP",
    "contexts": [
      "Whether the match is currently in its setup phase."
    ],
    "definitions": []
  },
  {
    "name": "IS IN SPAWN ROOM",
    "contexts": [
      "Whether a specific player is in the spawn",
      "room (and is thus being healed and able",
      "to change heroes)."
    ],
    "definitions": [
      [
        "Player - The player whose spawn room status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS IN VIEW ANGLE",
    "contexts": [
      "Whether a location is within view of a player."
    ],
    "definitions": [
      [
        "Player - The player whose view to use for",
        "the check. Can use most player based Value",
        "Syntax to retrieve this value."
      ],
      [
        "Location - The location to test if it’s",
        "within view. Most positional based Value",
        "Syntax can be used here."
      ],
      [
        "View Angle - The view angle to compare against",
        "in degrees. Can use most angle based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS MATCH COMPLETE",
    "contexts": [
      "Whether the match has finished."
    ],
    "definitions": []
  },
  {
    "name": "IS MOVING",
    "contexts": [
      "Whether a specific player is moving (as",
      "defined by having a non-zero constant speed)."
    ],
    "definitions": [
      [
        "Player - The player whose moving status",
        "status to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS OBJECTIVE COMPLETE",
    "contexts": [
      "Whether the specified objective has been",
      "completed Results in false if the game mode",
      "is not assault, escort, or assault/escort (hybrid)."
    ],
    "definitions": [
      [
        "Number - The index of the objective to consider,",
        "starting at 0 and counting up. Each control",
        "point, payload checkpoint, and payload destination",
        "has its own index. Can use most number based",
        "Value Syntax to retrieve this value. Value",
        "must be in the form of an integer (whole number)."
      ]
    ]
  },
  {
    "name": "IS ON GROUND",
    "contexts": [
      "Whether a player is on the ground (or other",
      "walkable surface)."
    ],
    "definitions": [
      [
        "Player - The player whose ground status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS ON OBJECTIVE",
    "contexts": [
      "Whether a specific player is currently occupying",
      "a payload or capture point."
    ],
    "definitions": [
      [
        "Player - The player whose objective status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS ON WALL",
    "contexts": [
      "Whether a player is on a wall (climbing or riding)."
    ],
    "definitions": [
      [
        "Player - The player whose wall status to",
        "check. Can use most player based Value Syntax",
        "to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS PORTRAIT ON FIRE",
    "contexts": [
      "Whether a specific player’s portrait is on fire."
    ],
    "definitions": [
      [
        "Player - The player whose portrait to check.",
        "Can use most player based Value Syntax to",
        "retrieve this value."
      ]
    ]
  },
  {
    "name": "IS STANDING",
    "contexts": [
      "Whether a player is standing (defined as",
      "both not moving and not in the air)."
    ],
    "definitions": [
      [
        "Player - The player whose standing status",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS TEAM ON DEFENSE",
    "contexts": [
      "Whether the specified team is currently",
      "on defense in a standard match."
    ],
    "definitions": [
      [
        "Team - The team whose role to check. Can",
        "use most Team Based Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS TEAM ON OFFENSE",
    "contexts": [
      "Whether the specified team is currently",
      "on offense in a standard match."
    ],
    "definitions": [
      [
        "Team - The team whose role to check. Can",
        "use most Team Based Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS TRUE FOR ALL",
    "contexts": [
      "Whether the specified condition evaluates",
      "to true for every value in the specified array."
    ],
    "definitions": [
      [
        "Array - The array whose values will be considered.",
        "Can use most Array Based Value Syntax to",
        "retrieve this value."
      ],
      [
        "Condition - The condition that is evaluated",
        "for each element of the specified array,",
        "Use the current array element value to reference",
        "the element of the array currently being",
        "considered. Can use most Comparative based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS TRUE FOR ANY",
    "contexts": [
      "Whether the specified condition evaluates",
      "to true for any value in the specified array."
    ],
    "definitions": [
      [
        "Array - The array whose values will be considered.",
        "Can use most Array Based Value Syntax to",
        "retrieve this value."
      ],
      [
        "Condition - The condition that is evaluated",
        "for each element of the specified array,",
        "Use the current array element value to reference",
        "the element of the array currently being",
        "considered. Can use most Comparative based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS USING ABILITY 1",
    "contexts": [
      "Whether the specified player is using ability 1."
    ],
    "definitions": [
      [
        "Player - The player whose ability 1 usage",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS USING ABILITY 2",
    "contexts": [
      "Whether the specified player is using ability 2."
    ],
    "definitions": [
      [
        "Player - The player whose ability 2 usage",
        "to check. Can use most player based Value",
        "Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS USING ULTIMATE",
    "contexts": [
      "Whether the specified player is using an",
      "ultimate ability."
    ],
    "definitions": [
      [
        "Player - The player whose ultimate ability",
        "usage to check. Can use most player based",
        "Value Syntax to retrieve this value."
      ]
    ]
  },
  {
    "name": "IS WAITING FOR PLAYERS",
    "contexts": [
      "Whether the match is waiting for players",
      "to join before starting."
    ],
    "definitions": []
  },
  {
    "name": "LAST CREATED ENTITY",
    "contexts": [
      "A reference to the last effect or icon entity",
      "created by the event player (or created",
      "at the global level)."
    ],
    "definitions": []
  },
  {
    "name": "LAST DAMAGE OVER TIME ID",
    "contexts": [
      "An ID representing the most recent damage",
      "over time action that was executed by the",
      "event player (or executed at the global level)."
    ],
    "definitions": []
  },
  {
    "name": "LAST HEAL OVER TIME ID",
    "contexts": [
      "An ID representing the most recent heal",
      "over time action that was executed by the",
      "event player (or executed at the global level)."
    ],
    "definitions": []
  },
  {
    "name": "LAST OF",
    "contexts": [
      "The value at the end of the specified array.",
      "Results in a 0 if the specified array is empty."
    ],
    "definitions": [
      [
        "Array - The array from which the value is",
        "created. Can use most Array based Value",
        "Syntax to provide this data."
      ]
    ]
  },
  {
    "name": "LAST TEXT ID",
    "contexts": [
      "A reference to the last piece of text created",
      "by the event player (or created at the global",
      "level) via the create HUD text or create",
      "in-world text action."
    ],
    "definitions": []
  },
  {
    "name": "LEFT",
    "contexts": [
      "Shorthand for the directional vector(1,",
      "0, 0), which points to the left."
    ],
    "definitions": []
  },
  {
    "name": "LOCAL VECTOR OF",
    "contexts": [
      "The vector in local coordinates corresponding",
      "to the provided vector in world coordinates."
    ],
    "definitions": [
      [
        "World Vector - The vector in world coordinates",
        "that will be converted to local coordinates.",
        "Can use most Vector based Value Syntax to",
        "provide this data."
      ],
      [
        "Relative player - The player to whom the",
        "resulting vector will be relative. Can use",
        "most Player based Value Syntax to provide this data."
      ],
      [
        "Transformation - Specifies whether the vector",
        "should receive a rotation and a translation",
        "(usually applied to positions) or only a",
        "rotation (usually applied to directions",
        "and velocities). You can choose from Rotation",
        "or Rotation and Translation. Rotation is",
        "that the resulting vector will be rotated",
        "to the new frame of reference. Use this",
        "option when the provided vector is in a",
        "direction or velocity. Rotation and translation",
        "is that the resulting vector will be rotated",
        "and translated to the new frame of reference.",
        "Use this option when the provided vector is a position."
      ]
    ]
  },
  {
    "name": "MATCH ROUND",
    "contexts": [
      "The current round of the match, counting",
      "up from 1. This will return a numerical value"
    ],
    "definitions": []
  },
  {
    "name": "MATCH TIME",
    "contexts": [
      "The amount of time in seconds remaining",
      "in the current game mode phase. This will",
      "return a numerical value."
    ],
    "definitions": []
  },
  {
    "name": "MAX",
    "contexts": [
      "The greater of the two numbers. This will",
      "return a numerical value of two number values compared."
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax to compare with."
      ],
      [
        "Value - The right-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax to compare with."
      ]
    ]
  },
  {
    "name": "MAX HEALTH",
    "contexts": [
      "The max health of a player, including armor and shields."
    ],
    "definitions": [
      [
        "Player - The player whose max health to",
        "compare. Can use any Player based Value",
        "syntax to provide with."
      ]
    ]
  },
  {
    "name": "MIN",
    "contexts": [
      "The lesser of the two numbers. This will",
      "return a numerical value of two number values compared."
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax to compare with."
      ],
      [
        "Value - The right-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax to compare with."
      ]
    ]
  },
  {
    "name": "MODULO",
    "contexts": [
      "The remainder of the left-hand operand divided",
      "by the right-hand operand. Any number modulo",
      "zero will result in zero. This will return",
      "a numerical value of two number values compared.",
      "For example 7 divided by 2 will result in",
      "1 for the Modulo."
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax."
      ],
      [
        "Value - The right-hand operand. May be any",
        "value that results in a number. Can use",
        "any Number based Value syntax."
      ]
    ]
  },
  {
    "name": "MULTIPLY",
    "contexts": [
      "The product of two numbers or vectors. A",
      "vector multiplied by a number will yield",
      "a scaled vector."
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number or a vector.",
        "Can use any Number based or Vector based",
        "Value syntax to multiply with."
      ],
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number or a vector.",
        "Can use any Number based or Vector based",
        "Value syntax to multiply with."
      ]
    ]
  },
  {
    "name": "NEAREST WALKABLE POSITION",
    "contexts": [
      "The position closest to the specified position",
      "that can be stood on and is accessible from a spawn point."
    ],
    "definitions": [
      [
        "Position - The position from which to search",
        "for the nearest walkable position. Can use",
        "any Vector based Value syntax to divide with."
      ]
    ]
  },
  {
    "name": "NORMALIZE",
    "contexts": [
      "The unit-length normalization of a vector."
    ],
    "definitions": [
      [
        "Vector - The vector to normalize. Can use",
        "any Vector based Value syntax to divide with."
      ]
    ]
  },
  {
    "name": "NOT",
    "contexts": [
      "Whether the input is false (or the equivalent to false)"
    ],
    "definitions": [
      [
        "Value - When this input is false (or equivalent",
        "to false), then the not value is true. Otherwise,",
        "the not value is false. Can use most Boolean-based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NULL",
    "contexts": [
      "The absence of a player, used when no player",
      "is desired for a particular input, equivalent",
      "to the real number 0 for the purposes of",
      "comparison and debugging."
    ],
    "definitions": []
  },
  {
    "name": "NUMBER",
    "contexts": [
      "A real number constant."
    ],
    "definitions": [
      [
        "Number - A real number constant. Can use",
        "most Number based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF DEAD PLAYERS",
    "contexts": [
      "The number of dead players on a team or in the match."
    ],
    "definitions": [
      [
        "Team - The team or teams on which to count",
        "players. Can use most Team based Value Syntax",
        "to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF DEATHS",
    "contexts": [
      "The number of deaths a specific player has",
      "earned. This value only accumulates while",
      "a game is in progress."
    ],
    "definitions": [
      [
        "Player - The player whose death count to",
        "acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF ELIMINATIONS",
    "contexts": [
      "The number of eliminations a specific player",
      "has earned. This value only accumulates",
      "while a game is in progress."
    ],
    "definitions": [
      [
        "Player - The player whose elimination count",
        "to acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF FINAL BLOWS",
    "contexts": [
      "The number of final blows a specific player",
      "has earned. This value only accumulates",
      "while a game is in progress."
    ],
    "definitions": [
      [
        "Player - The player whose final blow count",
        "to acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF HEROES",
    "contexts": [
      "The number of players playing a specific",
      "hero on a team or in the match."
    ],
    "definitions": [
      [
        "Hero - The hero to check for play. Can use",
        "most Hero based Value Syntax to provide this value."
      ],
      [
        "Team - The team or teams on which to check",
        "for the hero being played. Can use most",
        "Team based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF LIVING PLAYERS",
    "contexts": [
      "The number of living players on a team or in the match."
    ],
    "definitions": [
      [
        "Team - The team or teams on which to count",
        "players. Can use most Team based Value Syntax",
        "to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF PLAYERS",
    "contexts": [
      "The number of players on a team or in the match."
    ],
    "definitions": [
      [
        "Team - The team or teams on which to count",
        "players. Can use most Team based Value Syntax",
        "to provide this value."
      ]
    ]
  },
  {
    "name": "NUMBER OF PLAYERS ON OBJECTIVE",
    "contexts": [
      "The number of players occupying a payload",
      "or a control point (either on a team or in the match)."
    ],
    "definitions": [
      [
        "Team - The team or teams on which to count",
        "players. Can use most Team based Value Syntax",
        "to provide this value."
      ]
    ]
  },
  {
    "name": "OBJECTIVE INDEX",
    "contexts": [
      "The control point, payload checkpoint, or",
      "payload destination currently active (either",
      "0, 1, or 2). Valid in Assault, Assault/Escort",
      "(Hybrid), Escort, and Control."
    ],
    "definitions": []
  },
  {
    "name": "OBJECTIVE POSITION",
    "contexts": [
      "The position in the world of the specified",
      "objective (either a control point, a payload",
      "checkpoint, or a payload destination) Valid",
      "in Assault, Assault/Escort (Hybrid), Escort, and Control."
    ],
    "definitions": [
      [
        "Number - The index of the objective to consider,",
        "starting at 0 and counting up. Each control",
        "point, payload checkpoint, and payload destination",
        "as its own index. Can use most Number based",
        "Value Syntax to provide this value, but",
        "must output in a integer of 0, 1, or 2."
      ]
    ]
  },
  {
    "name": "OPPOSITE TEAM OF",
    "contexts": [
      "The team opposite the specified team."
    ],
    "definitions": [
      [
        "Team - The team whose opposite to acquire.",
        "If all, the result will be all. Can use",
        "most Team based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "OR",
    "contexts": [
      "Whether either of the two inputs are true",
      "(or equivalent to true)."
    ],
    "definitions": [
      [
        "Value - One of the two inputs considered.",
        "If either one is true (or equivalent to",
        "true), then the OR value is true. Can use",
        "most Boolean based Value Syntax to provide this value."
      ],
      [
        "Value - One of the two inputs considered.",
        "If either one is true (or equivalent to",
        "true), then the OR value is true. Can use",
        "most Boolean based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "PAYLOAD POSITION",
    "contexts": [
      "The position in the world of the active payload."
    ],
    "definitions": []
  },
  {
    "name": "PAYLOAD PROGRESS PERCENTAGE",
    "contexts": [
      "The current progress towards the destination",
      "for the active payload (expressed as a percentage)."
    ],
    "definitions": []
  },
  {
    "name": "PLAYER CARRYING FLAG",
    "contexts": [
      "The player carrying a particular team’s",
      "flag in capture the flag. Results in null",
      "if no player is carrying the flag."
    ],
    "definitions": [
      [
        "Team - The team whose whose flag to check.",
        "Can use most Team based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "PLAYER CLOSEST TO RETICLE",
    "contexts": [
      "The player closest to the reticle of the",
      "specified player, optionally restricted by team."
    ],
    "definitions": [
      [
        "Player - The player from whose reticle to",
        "search for the closest player. Can use most",
        "Player based Value Syntax to provide this value."
      ],
      [
        "Team - The team or teams on which to search",
        "for the closest player. Can use most Team",
        "based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "PLAYER VARIABLE",
    "contexts": [
      "The current value of a player variable,",
      "which is a variable that belongs to a specific player."
    ],
    "definitions": [
      [
        "Player - The player whose variable to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ],
      [
        "Variable - Variable specified by a single",
        "alphabetic letter (A through Z)."
      ]
    ]
  },
  {
    "name": "PLAYERS IN SLOT",
    "contexts": [
      "The player or array of players who occupy",
      "a specific slot in the game."
    ],
    "definitions": [
      [
        "Slot - The slot number from each to acquire",
        "a player or players. In team games, each",
        "team has slots 0 through 5. In free-for-all",
        "games, slots are numbered 0 through 11.",
        "Can use most Number based Value Syntax to",
        "provide this value."
      ],
      [
        "Team - The team or teams from which to acquire",
        "a player or players. Can use most Team based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "PLAYERS IN VIEW ANGLE",
    "contexts": [
      "The players who are within a specific view",
      "angle of a specific player’s reticle, optionally",
      "restricted by team."
    ],
    "definitions": [
      [
        "Player - The player whose view to use for",
        "the check. Can use most Player based Value",
        "Syntax to provide this value."
      ],
      [
        "Team - The team or teams on which to consider",
        "players. Can use most Team based Value Syntax",
        "to provide this value."
      ],
      [
        "View Angle - The view angle to compare against",
        "in degrees. Can use most Angle based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "PLAYERS ON HERO",
    "contexts": [
      "The array of players playing a specific",
      "hero on a team or in the match."
    ],
    "definitions": [
      [
        "Hero - The hero to check for play. Can use",
        "most Hero based Value Syntax to provide this value."
      ],
      [
        "Team - The team or teams on which to check",
        "for the hero being played. Can use most",
        "Team based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "PLAYERS WITHIN RADIUS",
    "contexts": [
      "An array containing all players within a",
      "certain distance of a position, optionally",
      "restricted by team and line of sight."
    ],
    "definitions": [
      [
        "Center - The center position from which",
        "to measure distance. Can use most Vector",
        "based Value Syntax to provide this value."
      ],
      [
        "Radius - The radius in meters inside which",
        "players must be in order to be included",
        "in the resulting array. Can use most Number",
        "based Value Syntax to provide this value."
      ],
      [
        "Team - The team or teams to which a player",
        "must belong to be included in the resulting",
        "array. Can use most Team based Value Syntax",
        "to provide this value."
      ],
      [
        "LOS Check - Specifies whether and how a",
        "player must pass a line-of-sight check to",
        "be included in the resulting array. You",
        "can choose from Off, Surfaces, Surfaces",
        "and Enemy Barriers, and Surfaces and All",
        "Barriers. Off will result in the line of",
        "sight is never blocked, allowing results",
        "through walls. Surfaces will result in line",
        "of sight is blocked by ceilings, walls,",
        "floors, platforms, and any fixed object",
        "that blocks projectiles. Surfaces and Enemy",
        "Barriers will result in line of sight is",
        "blocked by ceilings, walls, floors, platforms,",
        "any fixed object that blocks projectiles,",
        "and barriers created by the enemy team.",
        "Surfaces and All Barriers will result in",
        "line of sight is blocked by ceilings, walls,",
        "floors, platforms, any fixed object that",
        "blocks projectiles, and all barriers."
      ]
    ]
  },
  {
    "name": "POINT CAPTURE PERCENTAGE",
    "contexts": [
      "The current progress towards capture for",
      "the active control point (expressed as a percentage)."
    ],
    "definitions": []
  },
  {
    "name": "POSITION OF",
    "contexts": [
      "The current position of a player as a vector."
    ],
    "definitions": [
      [
        "Player - The player whose position to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "RAISE TO POWER",
    "contexts": [
      "The left-hand operand raised to the power",
      "of the right-hand operand. For example 2 ^ 3 = 8"
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number. Can use",
        "most Number based Value Syntax to provide this value."
      ],
      [
        "Value - The right-hand operand. May be any",
        "value that results in a number. Can use",
        "most Number based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "RANDOM INTEGER",
    "contexts": [
      "A random integer between the specified min",
      "and max, inclusive."
    ],
    "definitions": [
      [
        "MIN - The smallest integer allowed. If a",
        "real number is provided to this input, it",
        "is rounded to the nearest integer. Can use",
        "most Number based Value Syntax to provide this value."
      ],
      [
        "MAX - The largest integer allowed. If a",
        "real number is provided to this input, it",
        "is rounded to the nearest integer. Can use",
        "most Number based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "RANDOM REAL",
    "contexts": [
      "A random real number between the specified min and max."
    ],
    "definitions": [
      [
        "MIN - The smallest real number allowed.",
        "Can use most Number based Value Syntax to",
        "provide this value."
      ],
      [
        "MAX - The largest real number allowed. Can",
        "use most Number based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "RANDOM VALUE IN ARRAY",
    "contexts": [
      "A random value from the specified array."
    ],
    "definitions": [
      [
        "Array - The array from which to randomly",
        "take a value. If a non-array value is provided,",
        "the result is simply the provided value.",
        "Can use most Array based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "RANDOMIZED ARRAY",
    "contexts": [
      "A copy of the specified array with the values",
      "in a random order"
    ],
    "definitions": [
      [
        "Array - The array whose copy will be randomized.",
        "Can use most Array based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "RAY CAST HIT NORMAL - New!",
    "contexts": [
      "The surface normal at the ray cast hit position",
      "(or from end pos to start pos if no hit occurs)."
    ],
    "definitions": [
      [
        "Start POS - The start position for the ray",
        "cast. If a player is provided. A position",
        "2 meters above the player’s feet is used.",
        "Can use most Vector based Value Syntax to",
        "provide this value."
      ],
      [
        "End POS - The end position for the ray cast.",
        "If a player is provided. A position 2 meters",
        "above the player’s feet is used. Can use",
        "most Vector based Value Syntax to provide this value."
      ],
      [
        "Players to include - Which players can be",
        "hit by this ray cast. Can use most Player",
        "based Value Syntax to provide this value."
      ],
      [
        "Players to exclude - Which players cannot",
        "be hit by this ray cast. This list takes",
        "precedence over players to include. Can",
        "use most Player based Value Syntax to provide this value."
      ],
      [
        "Include player owned objects - Whether player",
        "owned objects (such as barriers or turrets)",
        "should be included in the ray cast. Can",
        "use most Boolean based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "RAY CAST HIT PLAYER - New!",
    "contexts": [
      "The player hit by the ray cast (or null",
      "if no player is hit)."
    ],
    "definitions": [
      [
        "Start POS - The start position for the ray",
        "cast. If a player is provided. A position",
        "2 meters above the player’s feet is used.",
        "Can use most Vector based Value Syntax to",
        "provide this value."
      ],
      [
        "End POS - The end position for the ray cast.",
        "If a player is provided. A position 2 meters",
        "above the player’s feet is used. Can use",
        "most Vector based Value Syntax to provide this value."
      ],
      [
        "Players to include - Which players can be",
        "hit by this ray cast. Can use most Player",
        "based Value Syntax to provide this value."
      ],
      [
        "Players to exclude - Which players cannot",
        "be hit by this ray cast. This list takes",
        "precedence over players to include. Can",
        "use most Player based Value Syntax to provide this value."
      ],
      [
        "Include player owned objects - Whether player",
        "owned objects (such as barriers or turrets)",
        "should be included in the ray cast. Can",
        "use most Boolean based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "RAY CAST HIT POSITION - New!",
    "contexts": [
      "The position where the ray cast hits a surface,",
      "object, or player (or the end POS if no hit occurs)."
    ],
    "definitions": [
      [
        "Start POS - The start position for the ray",
        "cast. If a player is provided. A position",
        "2 meters above the player’s feet is used.",
        "Can use most Vector based Value Syntax to",
        "provide this value."
      ],
      [
        "End POS - The end position for the ray cast.",
        "If a player is provided. A position 2 meters",
        "above the player’s feet is used. Can use",
        "most Vector based Value Syntax to provide this value."
      ],
      [
        "Players to include - Which players can be",
        "hit by this ray cast. Can use most Player",
        "based Value Syntax to provide this value."
      ],
      [
        "Players to exclude - Which players cannot",
        "be hit by this ray cast. This list takes",
        "precedence over players to include. Can",
        "use most Player based Value Syntax to provide this value."
      ],
      [
        "Include player owned objects - Whether player",
        "owned objects (such as barriers or turrets)",
        "should be included in the ray cast. Can",
        "use most Boolean based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "REMOVE FROM ARRAY",
    "contexts": [
      "A copy of an array with one or more values",
      "removed (if found)."
    ],
    "definitions": [
      [
        "Array - The array from which to remove values.",
        "Can use most Array based Value Syntax to",
        "provide this value."
      ],
      [
        "Value - The value to remove from the array",
        "(if found), if this value itself an array,",
        "each matching element is removed. Can use",
        "most Array based or Number based Value Syntax",
        "to provide this value."
      ]
    ]
  },
  {
    "name": "RIGHT",
    "contexts": [
      "Shorthand for the directional vector (-1,",
      "0, 0), which points to the right."
    ],
    "definitions": []
  },
  {
    "name": "ROUND TO INTEGER",
    "contexts": [
      "The integer to which the specified value rounds."
    ],
    "definitions": [
      [
        "Value - The real number to round. Can use",
        "most Number based Value Syntax to provide this value."
      ],
      [
        "Rounding Type - Determines the direction",
        "in which the value will be rounded. You",
        "can round up, down, or to the nearest integer."
      ]
    ]
  },
  {
    "name": "SCORE OF",
    "contexts": [
      "The current score of a player. Results in",
      "0 if the game mode is not free-for-all."
    ],
    "definitions": [
      [
        "Player - The player whose score to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "SINE FROM DEGREES",
    "contexts": [
      "Sine of the specified angle in degrees.",
      "The sine is the ratio of the length of the",
      "side that is opposite  that angle to the",
      "length of the longest side of the triangle",
      "(the hypotenuse)."
    ],
    "definitions": [
      [
        "Angle - Angle in degrees. Can use most Player",
        "based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "SINE FROM RADIANS",
    "contexts": [
      "Sine of the specified angle in radians.",
      "The sine is the ratio of the length of the",
      "side that is opposite  that angle to the",
      "length of the longest side of the triangle",
      "(the hypotenuse). A radian is a unit of",
      "angle, equal to an angle at the center of",
      "a circle whose arc is equal in length to the radius."
    ],
    "definitions": [
      [
        "Angle - Angle in radians. Can use most Player",
        "based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "SLOT OF",
    "contexts": [
      "The slot number of the specified player.",
      "In team games, each team has slots 0 through",
      "5. In free-for-all games, slots are numbers 0 through 11."
    ],
    "definitions": [
      [
        "Player - The player whose slot number to",
        "acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "SORTED ARRAY",
    "contexts": [
      "A copy of the specified array with the values",
      "sorted according to the value rank that",
      "is evaluated for each element."
    ],
    "definitions": [
      [
        "Array - The array whose copy will be sorted.",
        "Can use most Array based Value Syntax to",
        "provide this value."
      ],
      [
        "Value Rank - The value that is evaluated",
        "for each element of the copied array. The",
        "array is sorted by this rank in ascending",
        "order. Use the current array element value",
        "to reference the element of the array currently",
        "being considered. Can use most Number based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "SPEED OF",
    "contexts": [
      "The current speed of a player in meters per second."
    ],
    "definitions": [
      [
        "Player - The player whose speed to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "SPEED OF IN DIRECTION",
    "contexts": [
      "The current speed of a player in a specific",
      "direction in meters per second."
    ],
    "definitions": [
      [
        "Player - The player whose speed to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ],
      [
        "Direction - The direction of travel in which",
        "to measure the player’s speed. Can use most",
        "Vector based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "SQUARE ROOT",
    "contexts": [
      "The square root of the specified value.",
      "For example the square root of 9 is 3."
    ],
    "definitions": [
      [
        "Value - The real number value whose square",
        "root will be computed. Negative values result",
        "in zero. Can use most Number based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "STRING",
    "contexts": [
      "Text formed from a selection of strings",
      "and specified values."
    ],
    "definitions": [
      [
        "String - How the string will be structured",
        "using a series of text and phrases."
      ],
      [
        "{0} - The first value in the string."
      ],
      [
        "{1} - The second value in the string."
      ],
      [
        "{2} - The third value in the string."
      ]
    ]
  },
  {
    "name": "SUBTRACT",
    "contexts": [
      "The difference between two numbers or vectors."
    ],
    "definitions": [
      [
        "Value - The left-hand operand. May be any",
        "value that results in a number or a vector.",
        "Can use most Number based Value Syntax to",
        "provide this value."
      ],
      [
        "Value - The right-hand operand. May be any",
        "value that results in a number or a vector.",
        "Can use most Number based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "TEAM",
    "contexts": [
      "A team constant. The all option represents",
      "both teams in a team or all players in a",
      "free-for-all game."
    ],
    "definitions": [
      [
        "Team - Specifies which team the value outputs",
        "to. This can be set to All, Team 1, or Team 2."
      ]
    ]
  },
  {
    "name": "TEAM OF",
    "contexts": [
      "The team of a player. If the game mode is",
      "free-for-all, the team is considered to be all."
    ],
    "definitions": [
      [
        "Player - The player whose team to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "TEAM SCORE",
    "contexts": [
      "The current score for the specified team.",
      "Results in a 0 in free-for-all game modes."
    ],
    "definitions": [
      [
        "Team - The team whose score to acquire.",
        "Can use most Team based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "THROTTLE OF",
    "contexts": [
      "The directional input of a player, represented",
      "by a vector with a horizontal input on the",
      "X component (positive to the left) and vertical",
      "input on the Z component (positive upward)."
    ],
    "definitions": [
      [
        "Player - The player whose directional input",
        "to acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "TOTAL TIME PLAYED",
    "contexts": [
      "The total time in seconds that have elapsed",
      "since the game instance was created (including",
      "setup time and transitions)."
    ],
    "definitions": []
  },
  {
    "name": "TRUE",
    "contexts": [
      "The Boolean value of true."
    ],
    "definitions": []
  },
  {
    "name": "ULTIMATE CHARGE PERCENT",
    "contexts": [
      "The current ultimate ability charge percentage of a player."
    ],
    "definitions": [
      [
        "Player - The player whose ultimate charge",
        "percentage to acquire. Can use most Player",
        "based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "UP",
    "contexts": [
      "Shorthand for the directional vector(0,",
      "1, 0). Which points upward."
    ],
    "definitions": []
  },
  {
    "name": "VALUE IN ARRAY",
    "contexts": [
      "The value found at a specific element of",
      "an array. Results in a 0 if the element does not exist."
    ],
    "definitions": [
      [
        "Array - The array whose element to acquire.",
        "Can use most Array based Value Syntax to",
        "provide this value."
      ],
      [
        "Index - The index whose element to acquire.",
        "Can use most Number based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "VECTOR",
    "contexts": [
      "A vector composed of three real numbers",
      "(X, Y, Z) where X is left, Y is Up, and",
      "Z is forward. Vectors are used for position,",
      "direction, and velocity."
    ],
    "definitions": [
      [
        "X - The X value of the Vector. Can use most",
        "Number based Value Syntax to provide this value."
      ],
      [
        "Y - The Y value of the vector. Can use most",
        "Number based Value Syntax to provide this value."
      ],
      [
        "Z - The Z value of the Vector. Can use most",
        "Number based Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "VECTOR TOWARDS",
    "contexts": [
      "The displacement vector from one position to another."
    ],
    "definitions": [
      [
        "Start Pos - The start position for the line",
        "of sight check. Most positional based Value",
        "Syntax can be used here."
      ],
      [
        "End Pos - The end position for the line",
        "of sight check. Most positional based Value",
        "Syntax can be used here."
      ]
    ]
  },
  {
    "name": "VELOCITY OF",
    "contexts": [
      "The current velocity of a player as a vector.",
      "If the player is on a surface, the Y component",
      "of this velocity will be 0m even when traveling",
      "up or down a slope."
    ],
    "definitions": [
      [
        "Player - The player whose velocity to acquire.",
        "Can use most Player based Value Syntax to",
        "provide this value."
      ]
    ]
  },
  {
    "name": "VERTICAL ANGLE FROM DIRECTION",
    "contexts": [
      "The vertical angle in degrees corresponding",
      "to the specified direction vector."
    ],
    "definitions": [
      [
        "Direction - The direction vector from which",
        "to acquire a vertical angle in degrees.",
        "The vector is unitized before calculations",
        "begins. Can use most Vector based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "VERTICAL ANGLE TOWARDS",
    "contexts": [
      "The vertical angle in degrees from a player’s",
      "current forward direction to the specified",
      "position. The result is positive if the",
      "position is below the player. Otherwise,",
      "the result is zero or negative."
    ],
    "definitions": [
      [
        "Position - The player whose current facing",
        "the angle begins. Can use most Player based",
        "Value Syntax to provide this value."
      ],
      [
        "Position - The direction vector from which",
        "to acquire a vertical angle in degrees.",
        "The vector is unitized before calculations",
        "begins. Can use most Vector based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "VERTICAL FACING ANGLE OF",
    "contexts": [
      "The vertical angle in degrees, of a player’s",
      "current facing relative to the world. This",
      "value increases as the player looks down."
    ],
    "definitions": [
      [
        "Player - The player whose vertical facing",
        "angle to acquire. Can use most Player based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "VERTICAL SPEED OF",
    "contexts": [
      "The current vertical speed of a player in",
      "meters per second. This measurement excludes",
      "all horizontal motion, including motion",
      "while traveling up and down slopes."
    ],
    "definitions": [
      [
        "Player - The player whose vertical speed",
        "to acquire. Can use most Player based Value",
        "Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "VICTIM",
    "contexts": [
      "The player that received damage for the",
      "event currently being processed by this",
      "rule. May be the same as the attacker or",
      "the event player."
    ],
    "definitions": []
  },
  {
    "name": "WORLD VECTOR OF",
    "contexts": [
      "The vector in the world coordinates corresponding",
      "to the provided vector in local coordinates."
    ],
    "definitions": [
      [
        "Local vector - The vector in local coordinates",
        "that will be converted to world coordinates.",
        "Can use most Vector based Value Syntax to",
        "provide this value."
      ],
      [
        "Relative Player - The player to whom the",
        "local vector is relative. Can use most Player",
        "based Value Syntax to provide this value."
      ],
      [
        "Local vector - Specifies whether the vector",
        "should receive a rotation and a translation",
        "(usually applied to positions) or only a",
        "rotation (usually applied to directions",
        "and velocities). Can select rotation or",
        "rotation and translation."
      ]
    ]
  },
  {
    "name": "X COMPONENT OF",
    "contexts": [
      "The X Component of the specified Vector,",
      "usually representing a leftward amount."
    ],
    "definitions": [
      [
        "Value - The vector from which to acquire",
        "the X component. Can use most Vector based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "Y COMPONENT OF",
    "contexts": [
      "The Y Component of the specified Vector,",
      "usually representing a upward amount."
    ],
    "definitions": [
      [
        "Value - The vector from which to acquire",
        "the Y component. Can use most Vector based",
        "Value Syntax to provide this value."
      ]
    ]
  },
  {
    "name": "Z COMPONENT OF",
    "contexts": [
      "The Z Component of the specified Vector,",
      "usually representing a forward amount."
    ],
    "definitions": [
      [
        "Value - The vector from which to acquire",
        "the Z component. Can use most Vector based",
        "Value Syntax to provide this value."
      ]
    ]
  }
]